{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "BaaS - Bill Payment",
    "description": "**Description**: Api responsible for managing bill payments\n\n  For a bill payment be successfully completed, the client has to do two requests to the service.\n\n  The first one is for create a payment and get information about bill.\n\n  The second one is for the client provide information about payer and about the amount to pay.\nAfter this steps, some back end process will be responsible to confirm with application if the transaction is permitted and if was, check if client has balance enough to do the operation requested.\n# Status\nTo see how the payment flow is going the client can get information about it and confirm the statuses and occurrences.\n\n  | Status                | Description                                                       | Is final |\n  |---------------------- | ----------------------------------------------------------------- | -------- |\n  | `CREATED`             | The payment was created with the id provided.                     |          |\n  | `AUTHORIZED`          | The customer has authorized the payment and it will be processed. |          |\n  | `CONFIRMING`          | Payment has been sent for internal confirmation.                  |          |\n  | `CONFIRMED`           | Application confirmed payment.                                    |          |\n  | `NOT_CONFIRMED`       | Application not confirmed payment.                                |   Yes    |\n  | `PROCESSING`          | Payment has been sent for internal processing                     |          |\n  | `TRANSFERRED`         | Payment has been transferred internally and awaits finalization.  |          |\n  | `REJECTED`            | Payment has been rejected.                                        |   Yes    |\n  | `ERROR`               | Some error has ocurred during the process.                        |   Yes    |\n  | `CANCELED`            | Payment has been cancelled.                                       |   Yes    |\n  | `DONE`                | Payment has been fully processed.                                 |   Yes    |\n\n\n## Status Change Notification\nAs described in the status table, some statuses will fire a notification call to the client.\n  To receive this notifications, its necessary to request the registration of the service URL which will receive the notification object.\n  This object will be sent as an HTTP call with the POST method, of which the client must respond with a 200 status and within 5 seconds.\n\n**Notification Call Scheme**\n\n  Headers:\n  ```json\n  {\n    X-R4-Application: GUID // Application Unique Identifier\n    X-R4-Delivery: GUID // Attempt Unique Identifier\n    X-R4-Event: {event_type} // Event Type for the Notification (As describe in the Status Table)\n    User-Agent: R4-Hookshot\n  }\n  ```\n  Body\n  ```json\n  {\n    \"object_kind\": \"{event_type}\", // Event Type for the Notification (As describe in the Status Table)\n    \"object_id\": \"GUID\", // Bill payment Unique Identifier\n    \"application_id\": \"GUID\", // Application Unique Identifier\n    \"account_id\": \"GUID\" // Account Unique Identifier\n  }\n  ```\n## Bill Payment Confirmation Call\nTo receive the confirmation, its necessary the previous registration of the client url.\n  This object will be sent as an HTTP call with the POST method, of which the client must respond with a 202 status and within 10 seconds.\n\n**Bill Payment Confirmation Call Scheme**\n\n  Headers:\n  ```json\n  {\n    X-R4-Application: GUID // Application Unique Identifier\n    X-R4-Delivery: GUID // Attempt Unique Identifier\n    X-R4-Event: bill_payment_confirmation\n    User-Agent: R4-Hookshot\n  }\n  ```\n  Body\n  ```json\n  {\n    \"object_kind\": \"bill_payment_confirmation\", // Kind for the Confirmation Call\n    \"object_id\": \"GUID\", // Bill payment Unique Identifier\n    \"application_id\": \"GUID\", // Application Unique Identifier\n    \"account_id\": \"GUID\", // Account Unique Identifier\n    \"metadata\": { // Bill payment confirmation metadata\n      \"id\": \"GUID\", // Bill payment Unique Identifier\n      \"amount\": number // Amount to be paid\n      \"type\": \"string\" // Bill payment type, \"BARCODE\" or \"DIGITABLE\"\n      \"value\": \"string\" // Bill payment type value\n      \"payer\": {\n        \"document_type\": \"string\" // Payer document type, \"CPF\" or \"CNPJ\"\n        \"document_number\": \"string\" // Payer document number\n      }\n    }\n  }\n  ```\n\n# Bill Payment Errors Reason Table\nPossible reasons for errors that may be returned by the API, please refer to the endpoint documentation. This errors reason could be returned in bill payment occurrences and 424.\n\n  | Reason                | Description                                                 |\n  |---------------------- | ------------------------------------------------------------|\n  | `PAYMENT_ALREADY_EXISTS` | This transaction has already been completed. |\n  | `INVALID_BARCODE` | The barcode or digitable line is incorrect or it is not possible to perform this operation. |\n  | `TIMEOUT` | The operation could not be completed due to a long server response time. |\n  | `FAILED_IN_BILL_CONFIGURATION` | Issue with the registration in CIP, for this scenario, it is necessary to contact the beneficiary |\n  | `PAYEE_UNQUALIFIED` | The recipient is not qualified or eligible for this operation. |\n  | `PAYER_UNQUALIFIED` | The payer is not qualified or eligible for this operation. |\n  | `BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS` | The bill has exhausted its possible partial payments or does not allow partial payment. |\n  | `CHANNEL_NOT_ALLOWED` | The bill is only accepted at authorized locations. |\n  | `MAXIMUM_DAYS_DALAYED` | The bill does not allow payment after a certain number of days past due. |\n  | `DOCUMENT_NOT_ALLOWED` | This payment has a restriction that cannot be completed at this location. |\n  | `OVERDUE_PAYMENT` | The payment is overdue and cannot be processed. |\n  | `PAYMENT_PENDING_IN_CONFIRM` | The payment is pending confirmation. |\n  | `PARTIAL_VALUE_EXCEEDED_BALANCE` | Amount exceeded for partial payments. |\n  | `NOT_ALLOWED_AFTER_PAYMENT_DATE` | The payment has exceeded its due date and can no longer be processed. |\n  | `ASSIGNOR_NOT_ALLOWED` | The payment could not be processed, please contact support. |\n  | `OPERATION_LIMIT_EXCEEDED` | Too many inquiry operations have been performed for the same bill. |\n  | `UPDATED_VALUE_NOT_AVAILABLE` | Please try again the next day, the updated bill amount is currently unavailable. |\n  | `LIQUIDATION_DATE_AFTER_DUE_DATE` | The payment is being made outside the availability window. |\n  | `ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE` | Error converting the barcode into a digitable line. |\n  | `ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE` | Error converting the digitable line into a barcode. |\n  | `VALUE_NOT_ALLOWED` | The amount entered is not allowed for this operation |\n  | `CHANGE_VALUE_NOT_ALLOWED` | The payment does not allow the amount to be changed. |\n  | `TRANSACTION_NOT_FOUND` | Transaction not found for the provided digitable line or barcode. |\n  | `VALUE_LESS_THEN_MINIMUM` | The amount is less than the minimum allowed. |\n  | `VALUE_GREATER_THEN_MINIMUM` | The amount is greater than the maximum allowed. |\n  | `ID_ALREADY_IN_USE` | The payment ID is already in use, this error is unexpected, please contact support. |\n  | `REQUEST_NOT_FOUND_IN_THE_SAME_DATE` | The inquiry was not performed on the same day as the payment, this error is unexpected, please contact support. |\n  | `ID_NOT_FOUND` | The payment ID does not exist, this error is unexpected, please contact support. |\n  | `COMPLETE_PAYMENT_IN_PROCESS` | The payment is already being processed. |\n  | `GENERIC_ERROR` | The payment has a generic error, please contact support. |\n\n# Errors\nBill Payment uses [HTTP response status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) to indicate the success or failure of your API requests.\nIn general, there are three status code ranges you can expect:\n- `2xx` success status codes confirm that your request worked as expected\n\n- `4xx` error status codes indicate an error because of the information provided (e.g., a required parameter was not provided)\n\n- `5xx` error status codes are rare and indicate an error with R4's servers\n"
  },
  "servers": [
    {
      "description": "Development",
      "url": "https://api-dev.bancorandon.com/baas/bill-payment"
    },
    {
      "description": "Production",
      "url": "https://api.bancorandon.com/baas/bill-payment"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Bill Payment",
      "description": "Bill Payment"
    }
  ],
  "paths": {
    "/bill-payments": {
      "post": {
        "operationId": "PostBillPayments",
        "tags": [
          "Bill Payment"
        ],
        "summary": "Authorize payment",
        "description": "Returns information about a bill payment requested and prepare to authorize payment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "account_id",
                  "type",
                  "value"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "account_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "DIGITABLE",
                      "BARCODE"
                    ]
                  },
                  "value": {
                    "type": "string"
                  },
                  "initiation_channel": {
                    "type": "string",
                    "description": "The property indicates the bill payment initiation channel",
                    "enum": [
                      "AGENCY",
                      "APP",
                      "ATM",
                      "CALL_CENTER",
                      "INTERNET_BANKING"
                    ]
                  },
                  "open_banking": {
                    "type": "boolean",
                    "description": "Indicates that the bill payment was initiated in the Open Banking",
                    "default": false
                  }
                },
                "example": {
                  "id": "0683e31a-b8c7-4984-9c6a-fafd36e9ffba",
                  "account_id": "b24c5c00-b294-4956-8500-705c93ffaee8",
                  "type": "DIGITABLE",
                  "value": "34191.79001 01043.510047 91020.150008 6 86470026000",
                  "initiation_channel": "INTERNET_BANKING",
                  "open_banking": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "application_id",
                    "account_id",
                    "original_code",
                    "original_type",
                    "status",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "guid",
                      "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                    },
                    "application_id": {
                      "type": "string",
                      "format": "guid",
                      "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "guid",
                      "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                    },
                    "assignor": {
                      "type": "string",
                      "example": "Conta - Segmento Telefone"
                    },
                    "original_code": {
                      "type": "string",
                      "example": 8.480000000063354e+47
                    },
                    "original_type": {
                      "type": "string",
                      "enum": [
                        "DIGITABLE",
                        "BARCODE"
                      ],
                      "example": "DIGITABLE"
                    },
                    "original_value": {
                      "type": "number",
                      "example": 33.53,
                      "description": "When this field is without value, the total_updated field should be considered instead."
                    },
                    "settle_date": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-18"
                    },
                    "end_hour": {
                      "type": "string",
                      "example": "07:00"
                    },
                    "inite_hour": {
                      "type": "string",
                      "example": "05:00"
                    },
                    "next_settle": {
                      "type": "string",
                      "example": "N"
                    },
                    "value": {
                      "type": "number",
                      "example": 33.53
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "CREATED",
                        "AUTHORIZED",
                        "CONFIRMING",
                        "CONFIRMED",
                        "NOT_CONFIRMED",
                        "PROCESSING",
                        "TRANSFERRED",
                        "ERROR",
                        "CANCELED",
                        "DONE"
                      ]
                    },
                    "document_recipient": {
                      "type": "string",
                      "example": 96906497000100
                    },
                    "document_type_payer": {
                      "type": "string",
                      "enum": [
                        "CPF",
                        "CNPJ"
                      ]
                    },
                    "document_payer": {
                      "type": "string",
                      "example": 21568259000100
                    },
                    "pay_due_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "next_business_day": {
                      "type": "string",
                      "format": "date"
                    },
                    "due_date_register": {
                      "type": "string",
                      "format": "date"
                    },
                    "allow_change_value": {
                      "type": "string",
                      "enum": [
                        "YES",
                        "NO"
                      ]
                    },
                    "recipient": {
                      "type": "string",
                      "example": "RECIPIENT"
                    },
                    "payer": {
                      "type": "string",
                      "example": "PAYER"
                    },
                    "discount_value": {
                      "type": "number"
                    },
                    "interest_value_calculated": {
                      "type": "number"
                    },
                    "max_value": {
                      "type": "number"
                    },
                    "min_value": {
                      "type": "number"
                    },
                    "fine_value_calculated": {
                      "type": "number"
                    },
                    "total_updated": {
                      "type": "number"
                    },
                    "total_with_discount": {
                      "type": "number"
                    },
                    "total_with_additional": {
                      "type": "number"
                    },
                    "due_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-09-24 12:59:46.17378"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-09-24 12:59:49.830"
                    },
                    "initiation_channel": {
                      "type": "string",
                      "description": "The property indicates the bill payment initiation channel",
                      "enum": [
                        "AGENCY",
                        "APP",
                        "ATM",
                        "CALL_CENTER",
                        "INTERNET_BANKING"
                      ],
                      "example": "INTERNET_BANKING"
                    },
                    "open_banking": {
                      "type": "boolean",
                      "description": "Indicates that the bill payment was initiated in the Open Banking",
                      "example": true,
                      "default": false
                    },
                    "convenant": {
                      "type": "string",
                      "description": "Represents in which institution the payment will be settled",
                      "example": "BANCO 756 / AGENCIA 432"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed, BadRequest].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "BAD_REQUEST",
                          "enum": [
                            "BAD_REQUEST"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request params"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "error": {
                        "code": "VALIDATION_FAILED",
                        "message": "Invalid request data",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 2 - BadRequest": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 3 - Account is not valid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 4 - Invalid application uuid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Invalid application uuid",
                        "status_code": 400
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "AUTHENTICATION_FAILED",
                          "message": "Authentication failed.",
                          "status_code": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProductPermission].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing product permission",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "MISSING_PRODUCT_PERMISSION",
                              "enum": [
                                "MISSING_PRODUCT_PERMISSION"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Missing product permission"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "403"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductPermission": {
                    "value": {
                      "error": {
                        "code": "MISSING_PRODUCT_PERMISSION",
                        "message": "Missing product permission",
                        "status_code": 403
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, NotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Not Found",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "NOT_FOUND",
                              "enum": [
                                "NOT_FOUND"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Page not found"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "404"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "error": {
                        "code": "ACCOUNT_NOT_FOUND",
                        "message": "Account not found",
                        "status_code": 404
                      }
                    }
                  },
                  "Example 2 - NotFound": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Page not found",
                        "status_code": 404
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Error with types [Conflict, PaymentAlreadyExists].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Conflict",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "CONFLICT",
                              "enum": [
                                "CONFLICT"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Requested id already exists"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "409"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Payment already exists",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "PAYMENT_ALREADY_EXISTS",
                              "enum": [
                                "PAYMENT_ALREADY_EXISTS"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Payment already exists"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "409"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - Conflict": {
                    "value": {
                      "error": {
                        "code": "CONFLICT",
                        "message": "Requested id already exists",
                        "status_code": 409
                      }
                    }
                  },
                  "Example 2 - PaymentAlreadyExists": {
                    "value": {
                      "error": {
                        "code": "PAYMENT_ALREADY_EXISTS",
                        "message": "Payment already exists",
                        "status_code": 409
                      }
                    }
                  }
                }
              }
            }
          },
          "424": {
            "description": "Failed Dependency",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Failed Dependency",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "FAILED_DEPENDENCY",
                          "enum": [
                            "FAILED_DEPENDENCY"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The request failed due to failure of a previous request"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "424"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Check the Bill Payment Errors Reason Table for enums description",
                          "enum": [
                            "PAYMENT_ALREADY_EXISTS",
                            "INVALID_BARCODE",
                            "TIMEOUT",
                            "FAILED_IN_BILL_CONFIGURATION",
                            "PAYEE_UNQUALIFIED",
                            "PAYER_UNQUALIFIED",
                            "BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS",
                            "CHANNEL_NOT_ALLOWED",
                            "MAXIMUM_DAYS_DALAYED",
                            "DOCUMENT_NOT_ALLOWED",
                            "OVERDUE_PAYMENT",
                            "PAYMENT_PENDING_IN_CONFIRM",
                            "PARTIAL_VALUE_EXCEEDED_BALANCE",
                            "NOT_ALLOWED_AFTER_PAYMENT_DATE",
                            "ASSIGNOR_NOT_ALLOWED",
                            "OPERATION_LIMIT_EXCEEDED",
                            "UPDATED_VALUE_NOT_AVAILABLE",
                            "LIQUIDATION_DATE_AFTER_DUE_DATE",
                            "ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE",
                            "ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE",
                            "VALUE_NOT_ALLOWED",
                            "CHANGE_VALUE_NOT_ALLOWED",
                            "TRANSACTION_NOT_FOUND",
                            "VALUE_LESS_THEN_MINIMUM",
                            "VALUE_GREATER_THEN_MINIMUM",
                            "ID_ALREADY_IN_USE",
                            "REQUEST_NOT_FOUND_IN_THE_SAME_DATE",
                            "ID_NOT_FOUND",
                            "COMPLETE_PAYMENT_IN_PROCESS",
                            "GENERIC_ERROR"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with types [InternalServerError, GatewayTimeoutError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status_code": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "code",
                            "message",
                            "status_code"
                          ]
                        },
                        {
                          "example": {
                            "error": {
                              "code": "INTERNAL_SERVER_ERROR",
                              "message": "Internal Server Error",
                              "status_code": 500
                            }
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status_code": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "code",
                            "message",
                            "status_code"
                          ]
                        },
                        {
                          "example": {
                            "error": {
                              "code": "GATEWAY_TIMEOUT",
                              "message": "Gateway Timeout. Try again later",
                              "status_code": 504
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_SERVER_ERROR",
                        "message": "Internal Server Error",
                        "status_code": 500
                      }
                    }
                  },
                  "Example 2 - GatewayTimeoutError": {
                    "value": {
                      "error": {
                        "code": "GATEWAY_TIMEOUT_ERROR",
                        "message": "Gateway Timeout. Try again later",
                        "status_code": 504
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetBillPayments",
        "tags": [
          "Bill Payment"
        ],
        "summary": "Receive a bill payment",
        "description": "Returns information about a bill payment for a specif account.",
        "parameters": [
          {
            "in": "query",
            "name": "account_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "Account Id on database."
          },
          {
            "in": "query",
            "name": "is_final_status",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter to consider final status in the query"
          },
          {
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            },
            "description": "Base64 filter to bring only transfers after the provided value"
          },
          {
            "in": "query",
            "name": "before",
            "schema": {
              "type": "string"
            },
            "description": "Base64 filter to bring only transfers before the provided value"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            },
            "description": "The numbers of payments to return. Can be omitted if provided before or after filters with limit embedded in them. If nothing is provided, the default will be 10 as limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cursor": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string"
                        },
                        "before": {
                          "type": "string"
                        },
                        "limit": {
                          "type": "number"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "application_id",
                          "account_id",
                          "original_code",
                          "original_type",
                          "status",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "guid",
                            "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                          },
                          "application_id": {
                            "type": "string",
                            "format": "guid",
                            "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                          },
                          "account_id": {
                            "type": "string",
                            "format": "guid",
                            "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                          },
                          "assignor": {
                            "type": "string",
                            "example": "Conta - Segmento Telefone"
                          },
                          "original_code": {
                            "type": "string",
                            "example": 8.480000000063354e+47
                          },
                          "original_type": {
                            "type": "string",
                            "enum": [
                              "DIGITABLE",
                              "BARCODE"
                            ],
                            "example": "DIGITABLE"
                          },
                          "original_value": {
                            "type": "number",
                            "example": 33.53,
                            "description": "When this field is without value, the total_updated field should be considered instead."
                          },
                          "settle_date": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-10-18"
                          },
                          "end_hour": {
                            "type": "string",
                            "example": "07:00"
                          },
                          "inite_hour": {
                            "type": "string",
                            "example": "05:00"
                          },
                          "next_settle": {
                            "type": "string",
                            "example": "N"
                          },
                          "value": {
                            "type": "number",
                            "example": 33.53
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "CREATED",
                              "AUTHORIZED",
                              "CONFIRMING",
                              "CONFIRMED",
                              "NOT_CONFIRMED",
                              "PROCESSING",
                              "TRANSFERRED",
                              "ERROR",
                              "CANCELED",
                              "DONE"
                            ]
                          },
                          "document_recipient": {
                            "type": "string",
                            "example": 96906497000100
                          },
                          "document_type_payer": {
                            "type": "string",
                            "enum": [
                              "CPF",
                              "CNPJ"
                            ]
                          },
                          "document_payer": {
                            "type": "string",
                            "example": 21568259000100
                          },
                          "pay_due_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "next_business_day": {
                            "type": "string",
                            "format": "date"
                          },
                          "due_date_register": {
                            "type": "string",
                            "format": "date"
                          },
                          "allow_change_value": {
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO"
                            ]
                          },
                          "recipient": {
                            "type": "string",
                            "example": "RECIPIENT"
                          },
                          "payer": {
                            "type": "string",
                            "example": "PAYER"
                          },
                          "discount_value": {
                            "type": "number"
                          },
                          "interest_value_calculated": {
                            "type": "number"
                          },
                          "max_value": {
                            "type": "number"
                          },
                          "min_value": {
                            "type": "number"
                          },
                          "fine_value_calculated": {
                            "type": "number"
                          },
                          "total_updated": {
                            "type": "number"
                          },
                          "total_with_discount": {
                            "type": "number"
                          },
                          "total_with_additional": {
                            "type": "number"
                          },
                          "due_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-09-24 12:59:46.17378"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-09-24 12:59:49.830"
                          },
                          "initiation_channel": {
                            "type": "string",
                            "description": "The property indicates the bill payment initiation channel",
                            "enum": [
                              "AGENCY",
                              "APP",
                              "ATM",
                              "CALL_CENTER",
                              "INTERNET_BANKING"
                            ],
                            "example": "INTERNET_BANKING"
                          },
                          "open_banking": {
                            "type": "boolean",
                            "description": "Indicates that the bill payment was initiated in the Open Banking",
                            "example": true,
                            "default": false
                          },
                          "convenant": {
                            "type": "string",
                            "description": "Represents in which institution the payment will be settled",
                            "example": "BANCO 756 / AGENCIA 432"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed, BadRequest].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "BAD_REQUEST",
                          "enum": [
                            "BAD_REQUEST"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request params"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "error": {
                        "code": "VALIDATION_FAILED",
                        "message": "Invalid request data",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 2 - BadRequest": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 3 - Account is not valid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 4 - Invalid application uuid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Invalid application uuid",
                        "status_code": 400
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "AUTHENTICATION_FAILED",
                          "message": "Authentication failed.",
                          "status_code": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProductPermission].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing product permission",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "MISSING_PRODUCT_PERMISSION",
                              "enum": [
                                "MISSING_PRODUCT_PERMISSION"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Missing product permission"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "403"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductPermission": {
                    "value": {
                      "error": {
                        "code": "MISSING_PRODUCT_PERMISSION",
                        "message": "Missing product permission",
                        "status_code": 403
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, NotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Not Found",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "NOT_FOUND",
                              "enum": [
                                "NOT_FOUND"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Page not found"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "404"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "error": {
                        "code": "ACCOUNT_NOT_FOUND",
                        "message": "Account not found",
                        "status_code": 404
                      }
                    }
                  },
                  "Example 2 - NotFound": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Page not found",
                        "status_code": 404
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "INTERNAL_SERVER_ERROR",
                          "message": "Internal Server Error",
                          "status_code": 500
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "GATEWAY_TIMEOUT",
                          "message": "Gateway Timeout. Try again later",
                          "status_code": 504
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/bill-payments/{payment_guuid}": {
      "post": {
        "operationId": "PostBillPaymentsPaymentGuuid",
        "tags": [
          "Bill Payment"
        ],
        "summary": "Authorize a payment",
        "description": "Authorize a payment by specifying a payment amount and payer information.",
        "parameters": [
          {
            "in": "path",
            "name": "payment_guuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "Transaction ID for authorized bill payment."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payer": {
                    "type": "object",
                    "properties": {
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ]
                      },
                      "document_number": {
                        "type": "number"
                      }
                    }
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "required": [
                  "payer - document_type - document_number",
                  "amount"
                ],
                "example": {
                  "payer": {
                    "document_type": "CPF",
                    "document_number": "1234567890"
                  },
                  "amount": 123.48
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment information.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Accepted"
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed, BadRequest].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "BAD_REQUEST",
                          "enum": [
                            "BAD_REQUEST"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request params"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Not Business Day Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "BUSINESS_DAY_ONLY_ERROR",
                              "enum": [
                                "BUSINESS_DAY_ONLY_ERROR"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The current day is not a business day"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Time Out Of Range Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "TIME_OUT_OF_RANGE",
                              "enum": [
                                "TIME_OUT_OF_RANGE"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The current time is out of range"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Request not allowed",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "REQUEST_NOT_ALLOWED",
                              "enum": [
                                "REQUEST_NOT_ALLOWED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The request is not allowed"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "error": {
                        "code": "VALIDATION_FAILED",
                        "message": "Invalid request data",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 2 - BadRequest": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 3 - Account is not valid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 4 - Invalid application uuid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Invalid application uuid",
                        "status_code": null
                      }
                    }
                  },
                  "Example 5 - Not Business Day (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BUSINESS_DAY_ONLY_ERROR",
                        "message": "The current day is not a business day",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 6 - Time Out Of Range (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "TIME_OUT_OF_RANGE",
                        "message": "The current time is out of range",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 7 - Request Not Allowed (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "REQUEST_NOT_ALLOWED",
                        "message": "The request is not allowed",
                        "status_code": 400
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "AUTHENTICATION_FAILED",
                          "message": "Authentication failed.",
                          "status_code": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProductPermission].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing product permission",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "MISSING_PRODUCT_PERMISSION",
                              "enum": [
                                "MISSING_PRODUCT_PERMISSION"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Missing product permission"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "403"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductPermission": {
                    "value": {
                      "error": {
                        "code": "MISSING_PRODUCT_PERMISSION",
                        "message": "Missing product permission",
                        "status_code": 403
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, NotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Not Found",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "NOT_FOUND",
                              "enum": [
                                "NOT_FOUND"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Page not found"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "404"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "error": {
                        "code": "ACCOUNT_NOT_FOUND",
                        "message": "Account not found",
                        "status_code": 404
                      }
                    }
                  },
                  "Example 2 - NotFound": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Page not found",
                        "status_code": 404
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Conflict",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "CONFLICT",
                              "enum": [
                                "CONFLICT"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Requested id already exists"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "409"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - Conflict": {
                    "value": {
                      "error": {
                        "code": "CONFLICT",
                        "message": "Payment already authorized or no longer allowed",
                        "status_code": 409
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Unprocessable Entity",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "UNPROCESSABLE_ENTITY",
                              "enum": [
                                "UNPROCESSABLE_ENTITY"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The request was well-formed but was unable to be followed due to semantic errors."
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "422"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - Payment Amount should be greater than X": {
                    "value": {
                      "error": {
                        "code": "UNPROCESSABLE_ENTITY",
                        "message": "Payment amount must be greater than or equal to 50",
                        "status_code": 422
                      }
                    }
                  },
                  "Example 2 - Payment Amount should be less than X": {
                    "value": {
                      "error": {
                        "code": "UNPROCESSABLE_ENTITY",
                        "message": "Payment amount must be less than or equal 10",
                        "status_code": 422
                      }
                    }
                  }
                }
              }
            }
          },
          "424": {
            "description": "Failed Dependency",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Failed Dependency",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "FAILED_DEPENDENCY",
                          "enum": [
                            "FAILED_DEPENDENCY"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The request failed due to failure of a previous request"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "424"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Check the Bill Payment Errors Reason Table for enums description",
                          "enum": [
                            "PAYMENT_ALREADY_EXISTS",
                            "INVALID_BARCODE",
                            "TIMEOUT",
                            "FAILED_IN_BILL_CONFIGURATION",
                            "PAYEE_UNQUALIFIED",
                            "PAYER_UNQUALIFIED",
                            "BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS",
                            "CHANNEL_NOT_ALLOWED",
                            "MAXIMUM_DAYS_DALAYED",
                            "DOCUMENT_NOT_ALLOWED",
                            "OVERDUE_PAYMENT",
                            "PAYMENT_PENDING_IN_CONFIRM",
                            "PARTIAL_VALUE_EXCEEDED_BALANCE",
                            "NOT_ALLOWED_AFTER_PAYMENT_DATE",
                            "ASSIGNOR_NOT_ALLOWED",
                            "OPERATION_LIMIT_EXCEEDED",
                            "UPDATED_VALUE_NOT_AVAILABLE",
                            "LIQUIDATION_DATE_AFTER_DUE_DATE",
                            "ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE",
                            "ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE",
                            "VALUE_NOT_ALLOWED",
                            "CHANGE_VALUE_NOT_ALLOWED",
                            "TRANSACTION_NOT_FOUND",
                            "VALUE_LESS_THEN_MINIMUM",
                            "VALUE_GREATER_THEN_MINIMUM",
                            "ID_ALREADY_IN_USE",
                            "REQUEST_NOT_FOUND_IN_THE_SAME_DATE",
                            "ID_NOT_FOUND",
                            "COMPLETE_PAYMENT_IN_PROCESS",
                            "GENERIC_ERROR"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "INTERNAL_SERVER_ERROR",
                          "message": "Internal Server Error",
                          "status_code": 500
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "GATEWAY_TIMEOUT",
                          "message": "Gateway Timeout. Try again later",
                          "status_code": 504
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetBillPaymentsPaymentGuuid",
        "tags": [
          "Bill Payment"
        ],
        "summary": "Receive a bill payment",
        "description": "Get payment information by payment guuid.",
        "parameters": [
          {
            "in": "path",
            "name": "payment_guuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "Bill payment guuid on database."
          }
        ],
        "responses": {
          "200": {
            "description": "Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "status",
                    "created_at"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "application_id",
                          "account_id",
                          "original_code",
                          "original_type",
                          "status",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "guid",
                            "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                          },
                          "application_id": {
                            "type": "string",
                            "format": "guid",
                            "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                          },
                          "account_id": {
                            "type": "string",
                            "format": "guid",
                            "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                          },
                          "assignor": {
                            "type": "string",
                            "example": "Conta - Segmento Telefone"
                          },
                          "original_code": {
                            "type": "string",
                            "example": 8.480000000063354e+47
                          },
                          "original_type": {
                            "type": "string",
                            "enum": [
                              "DIGITABLE",
                              "BARCODE"
                            ],
                            "example": "DIGITABLE"
                          },
                          "original_value": {
                            "type": "number",
                            "example": 33.53,
                            "description": "When this field is without value, the total_updated field should be considered instead."
                          },
                          "settle_date": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-10-18"
                          },
                          "end_hour": {
                            "type": "string",
                            "example": "07:00"
                          },
                          "inite_hour": {
                            "type": "string",
                            "example": "05:00"
                          },
                          "next_settle": {
                            "type": "string",
                            "example": "N"
                          },
                          "value": {
                            "type": "number",
                            "example": 33.53
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "CREATED",
                              "AUTHORIZED",
                              "CONFIRMING",
                              "CONFIRMED",
                              "NOT_CONFIRMED",
                              "PROCESSING",
                              "TRANSFERRED",
                              "ERROR",
                              "CANCELED",
                              "DONE"
                            ]
                          },
                          "document_recipient": {
                            "type": "string",
                            "example": 96906497000100
                          },
                          "document_type_payer": {
                            "type": "string",
                            "enum": [
                              "CPF",
                              "CNPJ"
                            ]
                          },
                          "document_payer": {
                            "type": "string",
                            "example": 21568259000100
                          },
                          "pay_due_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "next_business_day": {
                            "type": "string",
                            "format": "date"
                          },
                          "due_date_register": {
                            "type": "string",
                            "format": "date"
                          },
                          "allow_change_value": {
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO"
                            ]
                          },
                          "recipient": {
                            "type": "string",
                            "example": "RECIPIENT"
                          },
                          "payer": {
                            "type": "string",
                            "example": "PAYER"
                          },
                          "discount_value": {
                            "type": "number"
                          },
                          "interest_value_calculated": {
                            "type": "number"
                          },
                          "max_value": {
                            "type": "number"
                          },
                          "min_value": {
                            "type": "number"
                          },
                          "fine_value_calculated": {
                            "type": "number"
                          },
                          "total_updated": {
                            "type": "number"
                          },
                          "total_with_discount": {
                            "type": "number"
                          },
                          "total_with_additional": {
                            "type": "number"
                          },
                          "due_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-09-24 12:59:46.17378"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-09-24 12:59:49.830"
                          },
                          "initiation_channel": {
                            "type": "string",
                            "description": "The property indicates the bill payment initiation channel",
                            "enum": [
                              "AGENCY",
                              "APP",
                              "ATM",
                              "CALL_CENTER",
                              "INTERNET_BANKING"
                            ],
                            "example": "INTERNET_BANKING"
                          },
                          "open_banking": {
                            "type": "boolean",
                            "description": "Indicates that the bill payment was initiated in the Open Banking",
                            "example": true,
                            "default": false
                          },
                          "convenant": {
                            "type": "string",
                            "description": "Represents in which institution the payment will be settled",
                            "example": "BANCO 756 / AGENCIA 432"
                          }
                        }
                      }
                    },
                    "occurrences": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "CREATED",
                              "AUTHORIZED",
                              "CONFIRMED",
                              "NOT_CONFIRMED",
                              "TRANSFERRED",
                              "REJECTED",
                              "ERROR",
                              "CANCELED",
                              "DONE",
                              "FORBIDDEN"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date"
                          },
                          "reason": {
                            "type": "string",
                            "description": "Check the Bill Payment Errors Reason Table for enums description",
                            "enum": [
                              "PAYMENT_ALREADY_EXISTS",
                              "INVALID_BARCODE",
                              "TIMEOUT",
                              "FAILED_IN_BILL_CONFIGURATION",
                              "PAYEE_UNQUALIFIED",
                              "PAYER_UNQUALIFIED",
                              "BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS",
                              "CHANNEL_NOT_ALLOWED",
                              "MAXIMUM_DAYS_DALAYED",
                              "DOCUMENT_NOT_ALLOWED",
                              "OVERDUE_PAYMENT",
                              "PAYMENT_PENDING_IN_CONFIRM",
                              "PARTIAL_VALUE_EXCEEDED_BALANCE",
                              "NOT_ALLOWED_AFTER_PAYMENT_DATE",
                              "ASSIGNOR_NOT_ALLOWED",
                              "OPERATION_LIMIT_EXCEEDED",
                              "UPDATED_VALUE_NOT_AVAILABLE",
                              "LIQUIDATION_DATE_AFTER_DUE_DATE",
                              "ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE",
                              "ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE",
                              "VALUE_NOT_ALLOWED",
                              "CHANGE_VALUE_NOT_ALLOWED",
                              "TRANSACTION_NOT_FOUND",
                              "VALUE_LESS_THEN_MINIMUM",
                              "VALUE_GREATER_THEN_MINIMUM",
                              "ID_ALREADY_IN_USE",
                              "REQUEST_NOT_FOUND_IN_THE_SAME_DATE",
                              "ID_NOT_FOUND",
                              "COMPLETE_PAYMENT_IN_PROCESS",
                              "GENERIC_ERROR"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed, BadRequest].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "BAD_REQUEST",
                          "enum": [
                            "BAD_REQUEST"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request params"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "error": {
                        "code": "VALIDATION_FAILED",
                        "message": "Invalid request data",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 2 - BadRequest": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 3 - Account is not valid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 4 - Invalid application uuid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Invalid application uuid",
                        "status_code": 400
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "AUTHENTICATION_FAILED",
                          "message": "Authentication failed.",
                          "status_code": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProductPermission].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing product permission",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "MISSING_PRODUCT_PERMISSION",
                              "enum": [
                                "MISSING_PRODUCT_PERMISSION"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Missing product permission"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "403"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductPermission": {
                    "value": {
                      "error": {
                        "code": "MISSING_PRODUCT_PERMISSION",
                        "message": "Missing product permission",
                        "status_code": 403
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, NotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Not Found",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "NOT_FOUND",
                              "enum": [
                                "NOT_FOUND"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Page not found"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "404"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "error": {
                        "code": "ACCOUNT_NOT_FOUND",
                        "message": "Account not found",
                        "status_code": 404
                      }
                    }
                  },
                  "Example 2 - NotFound": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Page not found",
                        "status_code": 404
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "INTERNAL_SERVER_ERROR",
                          "message": "Internal Server Error",
                          "status_code": 500
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "GATEWAY_TIMEOUT",
                          "message": "Gateway Timeout. Try again later",
                          "status_code": 504
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteBillPaymentsPaymentGuuid",
        "tags": [
          "Bill Payment"
        ],
        "summary": "Delete a bill payment",
        "description": "Cancels a payment and reverse it when possible",
        "parameters": [
          {
            "in": "path",
            "name": "payment_guuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "Bill payment guuid on database"
          }
        ],
        "responses": {
          "202": {
            "description": "Operation status information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed, PaymentNotPerformed, BadRequest].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Payment not performed",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "PAYMENT_NOT_PERFORMED",
                              "enum": [
                                "PAYMENT_NOT_PERFORMED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Payment not performed"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "BAD_REQUEST",
                          "enum": [
                            "BAD_REQUEST"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request params"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "error": {
                        "code": "VALIDATION_FAILED",
                        "message": "Invalid request data",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 2 - PaymentNotPerformed": {
                    "value": {
                      "error": {
                        "code": "PAYMENT_NOT_PERFORMED",
                        "message": "Payment has not been made, or has been rejected / cancelled.",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 3 - PaymentNotPerformed": {
                    "value": {
                      "error": {
                        "code": "PAYMENT_NOT_PERFORMED",
                        "message": "payment cannot be canceled.",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 4 - Account is not valid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Account is not valid",
                        "status_code": 400
                      }
                    }
                  },
                  "Example 5 - Invalid application uuid (BadRequest)": {
                    "value": {
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Invalid application uuid",
                        "status_code": 400
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "AUTHENTICATION_FAILED",
                          "message": "Authentication failed.",
                          "status_code": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProductPermission].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing product permission",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "MISSING_PRODUCT_PERMISSION",
                              "enum": [
                                "MISSING_PRODUCT_PERMISSION"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Missing product permission"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "403"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductPermission": {
                    "value": {
                      "error": {
                        "code": "MISSING_PRODUCT_PERMISSION",
                        "message": "Missing product permission",
                        "status_code": 403
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, NotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Not Found",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "NOT_FOUND",
                              "enum": [
                                "NOT_FOUND"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Page not found"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "404"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "error": {
                        "code": "ACCOUNT_NOT_FOUND",
                        "message": "Account not found",
                        "status_code": 404
                      }
                    }
                  },
                  "Example 2 - NotFound": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Page not found",
                        "status_code": 404
                      }
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Error with types [PaymentAlreadyPerformed].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Payment already performed",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "PAYMENT_ALREADY_PERFORMED",
                              "enum": [
                                "PAYMENT_ALREADY_PERFORMED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Bill payment already done, cannot be canceled"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "406"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - PaymentAlreadyPerformed": {
                    "value": {
                      "error": {
                        "code": "PAYMENT_ALREADY_PERFORMED",
                        "message": "Bill payment already done, cannot be canceled",
                        "status_code": 406
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "INTERNAL_SERVER_ERROR",
                          "message": "Internal Server Error",
                          "status_code": 500
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status_code": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "status_code"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "GATEWAY_TIMEOUT",
                          "message": "Gateway Timeout. Try again later",
                          "status_code": 504
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status_code": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "status_code"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Internal Server Error",
                      "status_code": 500
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "GatewayTimeoutError": {
        "description": "Gateway Timeout Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status_code": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "status_code"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "GATEWAY_TIMEOUT",
                      "message": "Gateway Timeout. Try again later",
                      "status_code": 504
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "AuthenticationError": {
        "description": "Authentication Failed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status_code": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "status_code"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed.",
                      "status_code": 401
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "PaymentResponse": {
        "description": "Payment",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "id",
                "application_id",
                "account_id",
                "original_code",
                "original_type",
                "status",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "guid",
                  "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                },
                "application_id": {
                  "type": "string",
                  "format": "guid",
                  "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                },
                "account_id": {
                  "type": "string",
                  "format": "guid",
                  "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                },
                "assignor": {
                  "type": "string",
                  "example": "Conta - Segmento Telefone"
                },
                "original_code": {
                  "type": "string",
                  "example": 8.480000000063354e+47
                },
                "original_type": {
                  "type": "string",
                  "enum": [
                    "DIGITABLE",
                    "BARCODE"
                  ],
                  "example": "DIGITABLE"
                },
                "original_value": {
                  "type": "number",
                  "example": 33.53,
                  "description": "When this field is without value, the total_updated field should be considered instead."
                },
                "settle_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-10-18"
                },
                "end_hour": {
                  "type": "string",
                  "example": "07:00"
                },
                "inite_hour": {
                  "type": "string",
                  "example": "05:00"
                },
                "next_settle": {
                  "type": "string",
                  "example": "N"
                },
                "value": {
                  "type": "number",
                  "example": 33.53
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATED",
                    "AUTHORIZED",
                    "CONFIRMING",
                    "CONFIRMED",
                    "NOT_CONFIRMED",
                    "PROCESSING",
                    "TRANSFERRED",
                    "ERROR",
                    "CANCELED",
                    "DONE"
                  ]
                },
                "document_recipient": {
                  "type": "string",
                  "example": 96906497000100
                },
                "document_type_payer": {
                  "type": "string",
                  "enum": [
                    "CPF",
                    "CNPJ"
                  ]
                },
                "document_payer": {
                  "type": "string",
                  "example": 21568259000100
                },
                "pay_due_date": {
                  "type": "string",
                  "format": "date"
                },
                "next_business_day": {
                  "type": "string",
                  "format": "date"
                },
                "due_date_register": {
                  "type": "string",
                  "format": "date"
                },
                "allow_change_value": {
                  "type": "string",
                  "enum": [
                    "YES",
                    "NO"
                  ]
                },
                "recipient": {
                  "type": "string",
                  "example": "RECIPIENT"
                },
                "payer": {
                  "type": "string",
                  "example": "PAYER"
                },
                "discount_value": {
                  "type": "number"
                },
                "interest_value_calculated": {
                  "type": "number"
                },
                "max_value": {
                  "type": "number"
                },
                "min_value": {
                  "type": "number"
                },
                "fine_value_calculated": {
                  "type": "number"
                },
                "total_updated": {
                  "type": "number"
                },
                "total_with_discount": {
                  "type": "number"
                },
                "total_with_additional": {
                  "type": "number"
                },
                "due_date": {
                  "type": "string",
                  "format": "date"
                },
                "created_at": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-09-24 12:59:46.17378"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-09-24 12:59:49.830"
                },
                "initiation_channel": {
                  "type": "string",
                  "description": "The property indicates the bill payment initiation channel",
                  "enum": [
                    "AGENCY",
                    "APP",
                    "ATM",
                    "CALL_CENTER",
                    "INTERNET_BANKING"
                  ],
                  "example": "INTERNET_BANKING"
                },
                "open_banking": {
                  "type": "boolean",
                  "description": "Indicates that the bill payment was initiated in the Open Banking",
                  "example": true,
                  "default": false
                },
                "convenant": {
                  "type": "string",
                  "description": "Represents in which institution the payment will be settled",
                  "example": "BANCO 756 / AGENCIA 432"
                }
              }
            }
          }
        }
      },
      "PaymentWithCursorResponse": {
        "description": "Payment",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "object",
                  "properties": {
                    "after": {
                      "type": "string"
                    },
                    "before": {
                      "type": "string"
                    },
                    "limit": {
                      "type": "number"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "application_id",
                      "account_id",
                      "original_code",
                      "original_type",
                      "status",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "guid",
                        "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                      },
                      "application_id": {
                        "type": "string",
                        "format": "guid",
                        "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                      },
                      "account_id": {
                        "type": "string",
                        "format": "guid",
                        "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                      },
                      "assignor": {
                        "type": "string",
                        "example": "Conta - Segmento Telefone"
                      },
                      "original_code": {
                        "type": "string",
                        "example": 8.480000000063354e+47
                      },
                      "original_type": {
                        "type": "string",
                        "enum": [
                          "DIGITABLE",
                          "BARCODE"
                        ],
                        "example": "DIGITABLE"
                      },
                      "original_value": {
                        "type": "number",
                        "example": 33.53,
                        "description": "When this field is without value, the total_updated field should be considered instead."
                      },
                      "settle_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-10-18"
                      },
                      "end_hour": {
                        "type": "string",
                        "example": "07:00"
                      },
                      "inite_hour": {
                        "type": "string",
                        "example": "05:00"
                      },
                      "next_settle": {
                        "type": "string",
                        "example": "N"
                      },
                      "value": {
                        "type": "number",
                        "example": 33.53
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "CREATED",
                          "AUTHORIZED",
                          "CONFIRMING",
                          "CONFIRMED",
                          "NOT_CONFIRMED",
                          "PROCESSING",
                          "TRANSFERRED",
                          "ERROR",
                          "CANCELED",
                          "DONE"
                        ]
                      },
                      "document_recipient": {
                        "type": "string",
                        "example": 96906497000100
                      },
                      "document_type_payer": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ]
                      },
                      "document_payer": {
                        "type": "string",
                        "example": 21568259000100
                      },
                      "pay_due_date": {
                        "type": "string",
                        "format": "date"
                      },
                      "next_business_day": {
                        "type": "string",
                        "format": "date"
                      },
                      "due_date_register": {
                        "type": "string",
                        "format": "date"
                      },
                      "allow_change_value": {
                        "type": "string",
                        "enum": [
                          "YES",
                          "NO"
                        ]
                      },
                      "recipient": {
                        "type": "string",
                        "example": "RECIPIENT"
                      },
                      "payer": {
                        "type": "string",
                        "example": "PAYER"
                      },
                      "discount_value": {
                        "type": "number"
                      },
                      "interest_value_calculated": {
                        "type": "number"
                      },
                      "max_value": {
                        "type": "number"
                      },
                      "min_value": {
                        "type": "number"
                      },
                      "fine_value_calculated": {
                        "type": "number"
                      },
                      "total_updated": {
                        "type": "number"
                      },
                      "total_with_discount": {
                        "type": "number"
                      },
                      "total_with_additional": {
                        "type": "number"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-09-24 12:59:46.17378"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-09-24 12:59:49.830"
                      },
                      "initiation_channel": {
                        "type": "string",
                        "description": "The property indicates the bill payment initiation channel",
                        "enum": [
                          "AGENCY",
                          "APP",
                          "ATM",
                          "CALL_CENTER",
                          "INTERNET_BANKING"
                        ],
                        "example": "INTERNET_BANKING"
                      },
                      "open_banking": {
                        "type": "boolean",
                        "description": "Indicates that the bill payment was initiated in the Open Banking",
                        "example": true,
                        "default": false
                      },
                      "convenant": {
                        "type": "string",
                        "description": "Represents in which institution the payment will be settled",
                        "example": "BANCO 756 / AGENCIA 432"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PaymentWithOccurrencesResponse": {
        "description": "Payment",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "code",
                "status",
                "created_at"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "application_id",
                      "account_id",
                      "original_code",
                      "original_type",
                      "status",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "guid",
                        "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                      },
                      "application_id": {
                        "type": "string",
                        "format": "guid",
                        "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                      },
                      "account_id": {
                        "type": "string",
                        "format": "guid",
                        "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                      },
                      "assignor": {
                        "type": "string",
                        "example": "Conta - Segmento Telefone"
                      },
                      "original_code": {
                        "type": "string",
                        "example": 8.480000000063354e+47
                      },
                      "original_type": {
                        "type": "string",
                        "enum": [
                          "DIGITABLE",
                          "BARCODE"
                        ],
                        "example": "DIGITABLE"
                      },
                      "original_value": {
                        "type": "number",
                        "example": 33.53,
                        "description": "When this field is without value, the total_updated field should be considered instead."
                      },
                      "settle_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-10-18"
                      },
                      "end_hour": {
                        "type": "string",
                        "example": "07:00"
                      },
                      "inite_hour": {
                        "type": "string",
                        "example": "05:00"
                      },
                      "next_settle": {
                        "type": "string",
                        "example": "N"
                      },
                      "value": {
                        "type": "number",
                        "example": 33.53
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "CREATED",
                          "AUTHORIZED",
                          "CONFIRMING",
                          "CONFIRMED",
                          "NOT_CONFIRMED",
                          "PROCESSING",
                          "TRANSFERRED",
                          "ERROR",
                          "CANCELED",
                          "DONE"
                        ]
                      },
                      "document_recipient": {
                        "type": "string",
                        "example": 96906497000100
                      },
                      "document_type_payer": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ]
                      },
                      "document_payer": {
                        "type": "string",
                        "example": 21568259000100
                      },
                      "pay_due_date": {
                        "type": "string",
                        "format": "date"
                      },
                      "next_business_day": {
                        "type": "string",
                        "format": "date"
                      },
                      "due_date_register": {
                        "type": "string",
                        "format": "date"
                      },
                      "allow_change_value": {
                        "type": "string",
                        "enum": [
                          "YES",
                          "NO"
                        ]
                      },
                      "recipient": {
                        "type": "string",
                        "example": "RECIPIENT"
                      },
                      "payer": {
                        "type": "string",
                        "example": "PAYER"
                      },
                      "discount_value": {
                        "type": "number"
                      },
                      "interest_value_calculated": {
                        "type": "number"
                      },
                      "max_value": {
                        "type": "number"
                      },
                      "min_value": {
                        "type": "number"
                      },
                      "fine_value_calculated": {
                        "type": "number"
                      },
                      "total_updated": {
                        "type": "number"
                      },
                      "total_with_discount": {
                        "type": "number"
                      },
                      "total_with_additional": {
                        "type": "number"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-09-24 12:59:46.17378"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-09-24 12:59:49.830"
                      },
                      "initiation_channel": {
                        "type": "string",
                        "description": "The property indicates the bill payment initiation channel",
                        "enum": [
                          "AGENCY",
                          "APP",
                          "ATM",
                          "CALL_CENTER",
                          "INTERNET_BANKING"
                        ],
                        "example": "INTERNET_BANKING"
                      },
                      "open_banking": {
                        "type": "boolean",
                        "description": "Indicates that the bill payment was initiated in the Open Banking",
                        "example": true,
                        "default": false
                      },
                      "convenant": {
                        "type": "string",
                        "description": "Represents in which institution the payment will be settled",
                        "example": "BANCO 756 / AGENCIA 432"
                      }
                    }
                  }
                },
                "occurrences": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "CREATED",
                          "AUTHORIZED",
                          "CONFIRMED",
                          "NOT_CONFIRMED",
                          "TRANSFERRED",
                          "REJECTED",
                          "ERROR",
                          "CANCELED",
                          "DONE",
                          "FORBIDDEN"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date"
                      },
                      "reason": {
                        "type": "string",
                        "description": "Check the Bill Payment Errors Reason Table for enums description",
                        "enum": [
                          "PAYMENT_ALREADY_EXISTS",
                          "INVALID_BARCODE",
                          "TIMEOUT",
                          "FAILED_IN_BILL_CONFIGURATION",
                          "PAYEE_UNQUALIFIED",
                          "PAYER_UNQUALIFIED",
                          "BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS",
                          "CHANNEL_NOT_ALLOWED",
                          "MAXIMUM_DAYS_DALAYED",
                          "DOCUMENT_NOT_ALLOWED",
                          "OVERDUE_PAYMENT",
                          "PAYMENT_PENDING_IN_CONFIRM",
                          "PARTIAL_VALUE_EXCEEDED_BALANCE",
                          "NOT_ALLOWED_AFTER_PAYMENT_DATE",
                          "ASSIGNOR_NOT_ALLOWED",
                          "OPERATION_LIMIT_EXCEEDED",
                          "UPDATED_VALUE_NOT_AVAILABLE",
                          "LIQUIDATION_DATE_AFTER_DUE_DATE",
                          "ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE",
                          "ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE",
                          "VALUE_NOT_ALLOWED",
                          "CHANGE_VALUE_NOT_ALLOWED",
                          "TRANSACTION_NOT_FOUND",
                          "VALUE_LESS_THEN_MINIMUM",
                          "VALUE_GREATER_THEN_MINIMUM",
                          "ID_ALREADY_IN_USE",
                          "REQUEST_NOT_FOUND_IN_THE_SAME_DATE",
                          "ID_NOT_FOUND",
                          "COMPLETE_PAYMENT_IN_PROCESS",
                          "GENERIC_ERROR"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "ErrorProperties": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status_code": {
            "type": "number"
          }
        },
        "required": [
          "code",
          "message",
          "status_code"
        ]
      },
      "InternalServerError": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "status_code": {
                "type": "number"
              }
            },
            "required": [
              "code",
              "message",
              "status_code"
            ]
          },
          {
            "example": {
              "error": {
                "code": "INTERNAL_SERVER_ERROR",
                "message": "Internal Server Error",
                "status_code": 500
              }
            }
          }
        ]
      },
      "GatewayTimeoutError": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "status_code": {
                "type": "number"
              }
            },
            "required": [
              "code",
              "message",
              "status_code"
            ]
          },
          {
            "example": {
              "error": {
                "code": "GATEWAY_TIMEOUT",
                "message": "Gateway Timeout. Try again later",
                "status_code": 504
              }
            }
          }
        ]
      },
      "AuthenticationError": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "status_code": {
                "type": "number"
              }
            },
            "required": [
              "code",
              "message",
              "status_code"
            ]
          },
          {
            "example": {
              "error": {
                "code": "AUTHENTICATION_FAILED",
                "message": "Authentication failed.",
                "status_code": 401
              }
            }
          }
        ]
      },
      "PaymentWithCursorResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "object",
            "properties": {
              "after": {
                "type": "string"
              },
              "before": {
                "type": "string"
              },
              "limit": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "application_id",
                "account_id",
                "original_code",
                "original_type",
                "status",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "guid",
                  "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                },
                "application_id": {
                  "type": "string",
                  "format": "guid",
                  "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                },
                "account_id": {
                  "type": "string",
                  "format": "guid",
                  "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                },
                "assignor": {
                  "type": "string",
                  "example": "Conta - Segmento Telefone"
                },
                "original_code": {
                  "type": "string",
                  "example": 8.480000000063354e+47
                },
                "original_type": {
                  "type": "string",
                  "enum": [
                    "DIGITABLE",
                    "BARCODE"
                  ],
                  "example": "DIGITABLE"
                },
                "original_value": {
                  "type": "number",
                  "example": 33.53,
                  "description": "When this field is without value, the total_updated field should be considered instead."
                },
                "settle_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-10-18"
                },
                "end_hour": {
                  "type": "string",
                  "example": "07:00"
                },
                "inite_hour": {
                  "type": "string",
                  "example": "05:00"
                },
                "next_settle": {
                  "type": "string",
                  "example": "N"
                },
                "value": {
                  "type": "number",
                  "example": 33.53
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATED",
                    "AUTHORIZED",
                    "CONFIRMING",
                    "CONFIRMED",
                    "NOT_CONFIRMED",
                    "PROCESSING",
                    "TRANSFERRED",
                    "ERROR",
                    "CANCELED",
                    "DONE"
                  ]
                },
                "document_recipient": {
                  "type": "string",
                  "example": 96906497000100
                },
                "document_type_payer": {
                  "type": "string",
                  "enum": [
                    "CPF",
                    "CNPJ"
                  ]
                },
                "document_payer": {
                  "type": "string",
                  "example": 21568259000100
                },
                "pay_due_date": {
                  "type": "string",
                  "format": "date"
                },
                "next_business_day": {
                  "type": "string",
                  "format": "date"
                },
                "due_date_register": {
                  "type": "string",
                  "format": "date"
                },
                "allow_change_value": {
                  "type": "string",
                  "enum": [
                    "YES",
                    "NO"
                  ]
                },
                "recipient": {
                  "type": "string",
                  "example": "RECIPIENT"
                },
                "payer": {
                  "type": "string",
                  "example": "PAYER"
                },
                "discount_value": {
                  "type": "number"
                },
                "interest_value_calculated": {
                  "type": "number"
                },
                "max_value": {
                  "type": "number"
                },
                "min_value": {
                  "type": "number"
                },
                "fine_value_calculated": {
                  "type": "number"
                },
                "total_updated": {
                  "type": "number"
                },
                "total_with_discount": {
                  "type": "number"
                },
                "total_with_additional": {
                  "type": "number"
                },
                "due_date": {
                  "type": "string",
                  "format": "date"
                },
                "created_at": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-09-24 12:59:46.17378"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-09-24 12:59:49.830"
                },
                "initiation_channel": {
                  "type": "string",
                  "description": "The property indicates the bill payment initiation channel",
                  "enum": [
                    "AGENCY",
                    "APP",
                    "ATM",
                    "CALL_CENTER",
                    "INTERNET_BANKING"
                  ],
                  "example": "INTERNET_BANKING"
                },
                "open_banking": {
                  "type": "boolean",
                  "description": "Indicates that the bill payment was initiated in the Open Banking",
                  "example": true,
                  "default": false
                },
                "convenant": {
                  "type": "string",
                  "description": "Represents in which institution the payment will be settled",
                  "example": "BANCO 756 / AGENCIA 432"
                }
              }
            }
          }
        }
      },
      "PaymentWithOccurrencesResponse": {
        "type": "object",
        "required": [
          "code",
          "status",
          "created_at"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "application_id",
                "account_id",
                "original_code",
                "original_type",
                "status",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "guid",
                  "example": "ad946bcd-682c-4c07-9264-9e958d400101"
                },
                "application_id": {
                  "type": "string",
                  "format": "guid",
                  "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
                },
                "account_id": {
                  "type": "string",
                  "format": "guid",
                  "example": "abs46bcd-682c-4c07-9264-9e958d400312"
                },
                "assignor": {
                  "type": "string",
                  "example": "Conta - Segmento Telefone"
                },
                "original_code": {
                  "type": "string",
                  "example": 8.480000000063354e+47
                },
                "original_type": {
                  "type": "string",
                  "enum": [
                    "DIGITABLE",
                    "BARCODE"
                  ],
                  "example": "DIGITABLE"
                },
                "original_value": {
                  "type": "number",
                  "example": 33.53,
                  "description": "When this field is without value, the total_updated field should be considered instead."
                },
                "settle_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-10-18"
                },
                "end_hour": {
                  "type": "string",
                  "example": "07:00"
                },
                "inite_hour": {
                  "type": "string",
                  "example": "05:00"
                },
                "next_settle": {
                  "type": "string",
                  "example": "N"
                },
                "value": {
                  "type": "number",
                  "example": 33.53
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATED",
                    "AUTHORIZED",
                    "CONFIRMING",
                    "CONFIRMED",
                    "NOT_CONFIRMED",
                    "PROCESSING",
                    "TRANSFERRED",
                    "ERROR",
                    "CANCELED",
                    "DONE"
                  ]
                },
                "document_recipient": {
                  "type": "string",
                  "example": 96906497000100
                },
                "document_type_payer": {
                  "type": "string",
                  "enum": [
                    "CPF",
                    "CNPJ"
                  ]
                },
                "document_payer": {
                  "type": "string",
                  "example": 21568259000100
                },
                "pay_due_date": {
                  "type": "string",
                  "format": "date"
                },
                "next_business_day": {
                  "type": "string",
                  "format": "date"
                },
                "due_date_register": {
                  "type": "string",
                  "format": "date"
                },
                "allow_change_value": {
                  "type": "string",
                  "enum": [
                    "YES",
                    "NO"
                  ]
                },
                "recipient": {
                  "type": "string",
                  "example": "RECIPIENT"
                },
                "payer": {
                  "type": "string",
                  "example": "PAYER"
                },
                "discount_value": {
                  "type": "number"
                },
                "interest_value_calculated": {
                  "type": "number"
                },
                "max_value": {
                  "type": "number"
                },
                "min_value": {
                  "type": "number"
                },
                "fine_value_calculated": {
                  "type": "number"
                },
                "total_updated": {
                  "type": "number"
                },
                "total_with_discount": {
                  "type": "number"
                },
                "total_with_additional": {
                  "type": "number"
                },
                "due_date": {
                  "type": "string",
                  "format": "date"
                },
                "created_at": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-09-24 12:59:46.17378"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-09-24 12:59:49.830"
                },
                "initiation_channel": {
                  "type": "string",
                  "description": "The property indicates the bill payment initiation channel",
                  "enum": [
                    "AGENCY",
                    "APP",
                    "ATM",
                    "CALL_CENTER",
                    "INTERNET_BANKING"
                  ],
                  "example": "INTERNET_BANKING"
                },
                "open_banking": {
                  "type": "boolean",
                  "description": "Indicates that the bill payment was initiated in the Open Banking",
                  "example": true,
                  "default": false
                },
                "convenant": {
                  "type": "string",
                  "description": "Represents in which institution the payment will be settled",
                  "example": "BANCO 756 / AGENCIA 432"
                }
              }
            }
          },
          "occurrences": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATED",
                    "AUTHORIZED",
                    "CONFIRMED",
                    "NOT_CONFIRMED",
                    "TRANSFERRED",
                    "REJECTED",
                    "ERROR",
                    "CANCELED",
                    "DONE",
                    "FORBIDDEN"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "format": "date"
                },
                "reason": {
                  "type": "string",
                  "description": "Check the Bill Payment Errors Reason Table for enums description",
                  "enum": [
                    "PAYMENT_ALREADY_EXISTS",
                    "INVALID_BARCODE",
                    "TIMEOUT",
                    "FAILED_IN_BILL_CONFIGURATION",
                    "PAYEE_UNQUALIFIED",
                    "PAYER_UNQUALIFIED",
                    "BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS",
                    "CHANNEL_NOT_ALLOWED",
                    "MAXIMUM_DAYS_DALAYED",
                    "DOCUMENT_NOT_ALLOWED",
                    "OVERDUE_PAYMENT",
                    "PAYMENT_PENDING_IN_CONFIRM",
                    "PARTIAL_VALUE_EXCEEDED_BALANCE",
                    "NOT_ALLOWED_AFTER_PAYMENT_DATE",
                    "ASSIGNOR_NOT_ALLOWED",
                    "OPERATION_LIMIT_EXCEEDED",
                    "UPDATED_VALUE_NOT_AVAILABLE",
                    "LIQUIDATION_DATE_AFTER_DUE_DATE",
                    "ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE",
                    "ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE",
                    "VALUE_NOT_ALLOWED",
                    "CHANGE_VALUE_NOT_ALLOWED",
                    "TRANSACTION_NOT_FOUND",
                    "VALUE_LESS_THEN_MINIMUM",
                    "VALUE_GREATER_THEN_MINIMUM",
                    "ID_ALREADY_IN_USE",
                    "REQUEST_NOT_FOUND_IN_THE_SAME_DATE",
                    "ID_NOT_FOUND",
                    "COMPLETE_PAYMENT_IN_PROCESS",
                    "GENERIC_ERROR"
                  ]
                }
              }
            }
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "required": [
          "id",
          "application_id",
          "account_id",
          "original_code",
          "original_type",
          "status",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "example": "ad946bcd-682c-4c07-9264-9e958d400101"
          },
          "application_id": {
            "type": "string",
            "format": "guid",
            "example": "cf4126bcd-682c-4c07-9264-9e958d400123"
          },
          "account_id": {
            "type": "string",
            "format": "guid",
            "example": "abs46bcd-682c-4c07-9264-9e958d400312"
          },
          "assignor": {
            "type": "string",
            "example": "Conta - Segmento Telefone"
          },
          "original_code": {
            "type": "string",
            "example": 8.480000000063354e+47
          },
          "original_type": {
            "type": "string",
            "enum": [
              "DIGITABLE",
              "BARCODE"
            ],
            "example": "DIGITABLE"
          },
          "original_value": {
            "type": "number",
            "example": 33.53,
            "description": "When this field is without value, the total_updated field should be considered instead."
          },
          "settle_date": {
            "type": "string",
            "format": "date",
            "example": "2021-10-18"
          },
          "end_hour": {
            "type": "string",
            "example": "07:00"
          },
          "inite_hour": {
            "type": "string",
            "example": "05:00"
          },
          "next_settle": {
            "type": "string",
            "example": "N"
          },
          "value": {
            "type": "number",
            "example": 33.53
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "AUTHORIZED",
              "CONFIRMING",
              "CONFIRMED",
              "NOT_CONFIRMED",
              "PROCESSING",
              "TRANSFERRED",
              "ERROR",
              "CANCELED",
              "DONE"
            ]
          },
          "document_recipient": {
            "type": "string",
            "example": 96906497000100
          },
          "document_type_payer": {
            "type": "string",
            "enum": [
              "CPF",
              "CNPJ"
            ]
          },
          "document_payer": {
            "type": "string",
            "example": 21568259000100
          },
          "pay_due_date": {
            "type": "string",
            "format": "date"
          },
          "next_business_day": {
            "type": "string",
            "format": "date"
          },
          "due_date_register": {
            "type": "string",
            "format": "date"
          },
          "allow_change_value": {
            "type": "string",
            "enum": [
              "YES",
              "NO"
            ]
          },
          "recipient": {
            "type": "string",
            "example": "RECIPIENT"
          },
          "payer": {
            "type": "string",
            "example": "PAYER"
          },
          "discount_value": {
            "type": "number"
          },
          "interest_value_calculated": {
            "type": "number"
          },
          "max_value": {
            "type": "number"
          },
          "min_value": {
            "type": "number"
          },
          "fine_value_calculated": {
            "type": "number"
          },
          "total_updated": {
            "type": "number"
          },
          "total_with_discount": {
            "type": "number"
          },
          "total_with_additional": {
            "type": "number"
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "example": "2021-09-24 12:59:46.17378"
          },
          "updated_at": {
            "type": "string",
            "format": "date",
            "example": "2021-09-24 12:59:49.830"
          },
          "initiation_channel": {
            "type": "string",
            "description": "The property indicates the bill payment initiation channel",
            "enum": [
              "AGENCY",
              "APP",
              "ATM",
              "CALL_CENTER",
              "INTERNET_BANKING"
            ],
            "example": "INTERNET_BANKING"
          },
          "open_banking": {
            "type": "boolean",
            "description": "Indicates that the bill payment was initiated in the Open Banking",
            "example": true,
            "default": false
          },
          "convenant": {
            "type": "string",
            "description": "Represents in which institution the payment will be settled",
            "example": "BANCO 756 / AGENCIA 432"
          }
        }
      },
      "ValidationFailedError": {
        "title": "The provided data is invalid",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "VALIDATION_FAILED",
                "enum": [
                  "VALIDATION_FAILED"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Invalid request data"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "BadRequest": {
        "title": "Bad Request",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "BAD_REQUEST",
            "enum": [
              "BAD_REQUEST"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Invalid request params"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "400"
          }
        }
      },
      "MissingProductPermissionError": {
        "title": "Missing product permission",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "MISSING_PRODUCT_PERMISSION",
                "enum": [
                  "MISSING_PRODUCT_PERMISSION"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Missing product permission"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "403"
              }
            }
          }
        }
      },
      "AccountNotFoundError": {
        "title": "Account Not Found",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "ACCOUNT_NOT_FOUND",
            "enum": [
              "ACCOUNT_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Account not found"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "404"
          }
        }
      },
      "NotFound": {
        "title": "Not Found",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "NOT_FOUND",
                "enum": [
                  "NOT_FOUND"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Page not found"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "404"
              }
            }
          }
        }
      },
      "Conflict": {
        "title": "Conflict",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "CONFLICT",
                "enum": [
                  "CONFLICT"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Requested id already exists"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "409"
              }
            }
          }
        }
      },
      "PaymentAlreadyExistsError": {
        "title": "Payment already exists",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "PAYMENT_ALREADY_EXISTS",
                "enum": [
                  "PAYMENT_ALREADY_EXISTS"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Payment already exists"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "409"
              }
            }
          }
        }
      },
      "FailedDependency": {
        "title": "Failed Dependency",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "FAILED_DEPENDENCY",
                "enum": [
                  "FAILED_DEPENDENCY"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "The request failed due to failure of a previous request"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "424"
              },
              "reason": {
                "type": "string",
                "description": "Check the Bill Payment Errors Reason Table for enums description",
                "enum": [
                  "PAYMENT_ALREADY_EXISTS",
                  "INVALID_BARCODE",
                  "TIMEOUT",
                  "FAILED_IN_BILL_CONFIGURATION",
                  "PAYEE_UNQUALIFIED",
                  "PAYER_UNQUALIFIED",
                  "BILL_PAYMENT_EXCEEDED_PARTIAL_PAYMENTS",
                  "CHANNEL_NOT_ALLOWED",
                  "MAXIMUM_DAYS_DALAYED",
                  "DOCUMENT_NOT_ALLOWED",
                  "OVERDUE_PAYMENT",
                  "PAYMENT_PENDING_IN_CONFIRM",
                  "PARTIAL_VALUE_EXCEEDED_BALANCE",
                  "NOT_ALLOWED_AFTER_PAYMENT_DATE",
                  "ASSIGNOR_NOT_ALLOWED",
                  "OPERATION_LIMIT_EXCEEDED",
                  "UPDATED_VALUE_NOT_AVAILABLE",
                  "LIQUIDATION_DATE_AFTER_DUE_DATE",
                  "ERROR_TO_CONVERT_BARCODE_INTO_DIGITABLE_LINE",
                  "ERROR_TO_CONVERT_DIGITABLE_LINE_INTO_BARCODE",
                  "VALUE_NOT_ALLOWED",
                  "CHANGE_VALUE_NOT_ALLOWED",
                  "TRANSACTION_NOT_FOUND",
                  "VALUE_LESS_THEN_MINIMUM",
                  "VALUE_GREATER_THEN_MINIMUM",
                  "ID_ALREADY_IN_USE",
                  "REQUEST_NOT_FOUND_IN_THE_SAME_DATE",
                  "ID_NOT_FOUND",
                  "COMPLETE_PAYMENT_IN_PROCESS",
                  "GENERIC_ERROR"
                ]
              }
            }
          }
        }
      },
      "NotBusinessDayError": {
        "title": "Not Business Day Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "BUSINESS_DAY_ONLY_ERROR",
                "enum": [
                  "BUSINESS_DAY_ONLY_ERROR"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "The current day is not a business day"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "TimeOutOfRangeError": {
        "title": "Time Out Of Range Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "TIME_OUT_OF_RANGE",
                "enum": [
                  "TIME_OUT_OF_RANGE"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "The current time is out of range"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "NotAllowedRequest": {
        "title": "Request not allowed",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "REQUEST_NOT_ALLOWED",
                "enum": [
                  "REQUEST_NOT_ALLOWED"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "The request is not allowed"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "title": "Unprocessable Entity",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "UNPROCESSABLE_ENTITY",
                "enum": [
                  "UNPROCESSABLE_ENTITY"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "The request was well-formed but was unable to be followed due to semantic errors."
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "422"
              }
            }
          }
        }
      },
      "PaymentNotPerformedError": {
        "title": "Payment not performed",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "PAYMENT_NOT_PERFORMED",
                "enum": [
                  "PAYMENT_NOT_PERFORMED"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Payment not performed"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "PaymentAlreadyPerformedError": {
        "title": "Payment already performed",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "PAYMENT_ALREADY_PERFORMED",
                "enum": [
                  "PAYMENT_ALREADY_PERFORMED"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Bill payment already done, cannot be canceled"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "406"
              }
            }
          }
        }
      }
    }
  }
}