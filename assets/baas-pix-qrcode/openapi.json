{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "BaaS - Pix QR Code",
    "description": "<h1> BaaS Pix QR Code </h1>\n<h5>Concepts:</h5>\n<section>\n<h3>Idempotence-Key</h3>\n<p>\n  To ensure that communication failures/interruptions do not result in accidental data loss or duplication, such as making a duplicate payment, the APIs are designed so that each request is executed \\\"exactly once\\\". For this, the concept of Idempotence was implemented.\n</p>\n<p>\n  The Client System must generate a new key for each request, guaranteeing that each operation will be executed only once.\n  In case you do not receive a response to a request, it can be sent again with the same key to obtain the response. If a new key is generated, we will understand that it is a new operation and will be executed a second time.\n</p>\n<p>\n  The idempotence key must be in GUID (v4) format, i.e. 32 hexadecimal digits, in an 8-4-4-4-12 array. </br>\n  Example: <strong>'69F963C6-7487-4363-9406-A1DE2A9636D4'</strong></br>\n  The Idempotence-Key will be stored in the API cache for a period of 24 hours.\n</p>\n</section>\n"
  },
  "servers": [
    {
      "description": "Development",
      "url": "https://api-dev.bancorandon.com/baas/pix-qrcode"
    },
    {
      "description": "Production",
      "url": "https://api.bancorandon.com/baas/pix-qrcode"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "general",
      "description": "General",
      "x-displayName": "General"
    },
    {
      "name": "decode_qr_code",
      "description": "Decode QR code",
      "x-displayName": "Decode QR Code"
    },
    {
      "name": "create_qr_code",
      "description": "Create QR Code",
      "x-displayName": "Create QR Code"
    },
    {
      "name": "get_qr_code_jws",
      "description": "Get QR Code JWS",
      "x-displayName": "Get QR Code JWS"
    },
    {
      "name": "update_qr_code",
      "description": "Update QR Code",
      "x-displayName": "Update QR Code"
    },
    {
      "name": "get_jwks",
      "description": "Get JWKS",
      "x-displayName": "Get JWKS"
    }
  ],
  "paths": {
    "/decode": {
      "post": {
        "tags": [
          "decode_qr_code"
        ],
        "summary": "Decode QR Code",
        "operationId": "decode_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Idempotence-Key",
            "schema": {
              "example": "69F963C6-7487-4363-9406-A1DE2A9636D4",
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Params to decode a QR Code",
                "required": [
                  "payload",
                  "account_id"
                ],
                "properties": {
                  "payload": {
                    "type": "string",
                    "description": "Payload decode from QR Code.",
                    "format": "base64",
                    "example": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "Unique identifier of the account.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "city_code": {
                    "type": "string",
                    "minLength": 5,
                    "example": "string"
                  },
                  "intended_payment_date": {
                    "type": "string",
                    "example": "2021-01-31",
                    "format": "yyyy-mm-dd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QR Code successfully decoded",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "Dynamic QR Code",
                      "description": "Dynamic QR Code",
                      "required": [
                        "end_to_end_id",
                        "qr_code"
                      ],
                      "properties": {
                        "end_to_end_id": {
                          "type": "string",
                          "maxLength": 32
                        },
                        "qr_code": {
                          "type": "object",
                          "description": "Decoded QR code properties",
                          "required": [
                            "kind",
                            "key",
                            "key_kind",
                            "review",
                            "recipient",
                            "original_value",
                            "city",
                            "created_at",
                            "scanned_at",
                            "status"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "STATIC",
                                "DYNAMIC",
                                "DYNAMIC_WITH_DUE_DATE"
                              ]
                            },
                            "key": {
                              "type": "string",
                              "description": "Pix key",
                              "minLength": 5,
                              "maxLength": 77,
                              "example": "30937116068"
                            },
                            "key_kind": {
                              "type": "string",
                              "description": "Kind from key",
                              "enum": [
                                "CPF",
                                "CNPJ",
                                "EMAIL",
                                "CELLPHONE",
                                "VIRTUAL"
                              ]
                            },
                            "category_code": {
                              "type": "string",
                              "description": "Recipient category code",
                              "maxLength": 4,
                              "default": "0000",
                              "example": "0000"
                            },
                            "city": {
                              "type": "string",
                              "maxLength": 15,
                              "example": "RIO DE JANEIRO"
                            },
                            "zip_code": {
                              "type": "string",
                              "minLength": 5,
                              "maxLength": 10,
                              "example": "90485-075"
                            },
                            "review": {
                              "type": "integer",
                              "maxLength": 5
                            },
                            "original_value": {
                              "type": "number",
                              "format": "double",
                              "description": "Transaction value",
                              "example": 4587.92
                            },
                            "allow_value_alteration": {
                              "type": "boolean"
                            },
                            "text_to_payer": {
                              "type": "string",
                              "maxLength": 140
                            },
                            "recipient": {
                              "type": "object",
                              "required": [
                                "ispb",
                                "document_type",
                                "account_type",
                                "account_number"
                              ],
                              "properties": {
                                "ispb": {
                                  "type": "integer",
                                  "maxLength": 8
                                },
                                "name": {
                                  "type": "string",
                                  "maxLength": 200
                                },
                                "document_type": {
                                  "type": "string",
                                  "enum": [
                                    "CPF",
                                    "CNPJ"
                                  ]
                                },
                                "document_number": {
                                  "type": "number",
                                  "maxLength": 14
                                },
                                "conciliation_id": {
                                  "type": "string",
                                  "maxLength": 25
                                },
                                "agency_number": {
                                  "type": "number",
                                  "maxLength": 4
                                },
                                "account_number": {
                                  "type": "number",
                                  "maxLength": 20
                                },
                                "account_digit": {
                                  "type": "number",
                                  "maxLength": 5
                                },
                                "account_type": {
                                  "type": "string",
                                  "enum": [
                                    "CHECKING_ACCOUNT",
                                    "SALARY_ACCOUNT",
                                    "SAVINGS_ACCOUNT",
                                    "PAYMENT_ACCOUNT"
                                  ]
                                }
                              }
                            },
                            "payer": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "maxLength": 200
                                },
                                "document_number": {
                                  "type": "number",
                                  "maxLength": 14
                                }
                              }
                            },
                            "modality": {
                              "type": "object",
                              "properties": {
                                "goal": {
                                  "type": "string",
                                  "enum": [
                                    "WITHDRAW",
                                    "CHANGE"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 4587.92
                                },
                                "allow_value_alteration": {
                                  "type": "boolean"
                                },
                                "withdraw_ispb": {
                                  "type": "integer",
                                  "description": "Service provider",
                                  "example": 44568458
                                },
                                "agent": {
                                  "type": "string",
                                  "enum": [
                                    "WITHDRAW_SERVICE_AGENT",
                                    "COMMERCIAL_ESTABLISHMENT_AGENT",
                                    "AGENT_OR_OTHER_LEGAL_ENTITY"
                                  ]
                                }
                              }
                            },
                            "additional_data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 100
                                  },
                                  "value": {
                                    "type": "string",
                                    "maxLength": 400
                                  }
                                }
                              }
                            },
                            "expires_in": {
                              "type": "integer",
                              "maxLength": 10,
                              "default": 86400
                            },
                            "created_at": {
                              "type": "string",
                              "example": "2021-01-31T15:33:17.000Z"
                            },
                            "scanned_at": {
                              "type": "string",
                              "example": "2021-02-05T10:25:47.000Z"
                            },
                            "psp_recipient_url": {
                              "type": "string",
                              "maxLength": 124
                            },
                            "reusable": {
                              "type": "boolean"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "DONE",
                                "REMOVED_BY_RECIPIENT",
                                "REMOVED_BY_PSP"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "Dynamic QR Code with due date",
                      "description": "Dynamic QR Code with due date",
                      "required": [
                        "end_to_end_id",
                        "qr_code"
                      ],
                      "properties": {
                        "end_to_end_id": {
                          "type": "string",
                          "maxLength": 32
                        },
                        "qr_code": {
                          "type": "object",
                          "description": "Decoded QR code properties",
                          "required": [
                            "kind",
                            "key",
                            "key_kind",
                            "review",
                            "recipient",
                            "final_value",
                            "due_date",
                            "days_after_due_date",
                            "created_at",
                            "scanned_at",
                            "status"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "STATIC",
                                "DYNAMIC",
                                "DYNAMIC_WITH_DUE_DATE"
                              ]
                            },
                            "key": {
                              "type": "string",
                              "description": "Pix key",
                              "minLength": 5,
                              "maxLength": 77,
                              "example": "30937116068"
                            },
                            "key_kind": {
                              "type": "string",
                              "description": "Kind from key",
                              "enum": [
                                "CPF",
                                "CNPJ",
                                "EMAIL",
                                "CELLPHONE",
                                "VIRTUAL"
                              ]
                            },
                            "category_code": {
                              "type": "string",
                              "description": "Recipient category code",
                              "maxLength": 4,
                              "default": "0000",
                              "example": "0000"
                            },
                            "review": {
                              "type": "integer",
                              "maxLength": 5
                            },
                            "original_value": {
                              "type": "number",
                              "format": "double",
                              "description": "Transaction value",
                              "example": 500
                            },
                            "text_to_payer": {
                              "type": "string",
                              "maxLength": 140
                            },
                            "recipient": {
                              "type": "object",
                              "properties": {
                                "ispb": {
                                  "type": "integer",
                                  "maxLength": 8
                                },
                                "name": {
                                  "type": "string",
                                  "maxLength": 200
                                },
                                "document_number": {
                                  "type": "number",
                                  "maxLength": 14
                                },
                                "nickname": {
                                  "type": "string",
                                  "maxLength": 100
                                },
                                "address": {
                                  "type": "string",
                                  "maxLength": 150
                                },
                                "city": {
                                  "type": "string",
                                  "maxLength": 15,
                                  "example": "RIO DE JANEIRO"
                                },
                                "state": {
                                  "type": "string",
                                  "maxLength": 2
                                },
                                "zip_code": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 10,
                                  "example": "90485-075"
                                },
                                "conciliation_id": {
                                  "type": "string",
                                  "maxLength": 25
                                },
                                "agency_number": {
                                  "type": "number",
                                  "maxLength": 4
                                },
                                "account_number": {
                                  "type": "number",
                                  "maxLength": 20
                                },
                                "account_digit": {
                                  "type": "number",
                                  "maxLength": 5
                                },
                                "account_type": {
                                  "type": "string",
                                  "enum": [
                                    "CHECKING_ACCOUNT",
                                    "SALARY_ACCOUNT",
                                    "SAVINGS_ACCOUNT",
                                    "PAYMENT_ACCOUNT"
                                  ]
                                }
                              }
                            },
                            "payer": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "maxLength": 200
                                },
                                "document_number": {
                                  "type": "number",
                                  "maxLength": 14
                                }
                              }
                            },
                            "deduction": {
                              "type": "number",
                              "format": "double",
                              "example": 5
                            },
                            "discount": {
                              "type": "number",
                              "format": "double",
                              "example": 50
                            },
                            "interest": {
                              "type": "number",
                              "format": "double",
                              "example": 0.5
                            },
                            "fine": {
                              "type": "number",
                              "format": "double",
                              "example": 10
                            },
                            "final_value": {
                              "type": "number",
                              "format": "double",
                              "description": "Value after deduction, discount, interest and fine",
                              "example": 350.59
                            },
                            "due_date": {
                              "type": "string",
                              "example": "2021-01-31"
                            },
                            "days_after_due_date": {
                              "type": "integer",
                              "maxLength": 6,
                              "example": 5
                            },
                            "additional_data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 100
                                  },
                                  "value": {
                                    "type": "string",
                                    "maxLength": 400
                                  }
                                }
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "example": "2021-01-31T15:33:17.000Z"
                            },
                            "scanned_at": {
                              "type": "string",
                              "example": "2021-02-05T10:25:47.000Z"
                            },
                            "psp_recipient_url": {
                              "type": "string",
                              "maxLength": 124
                            },
                            "reusable": {
                              "type": "boolean"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "DONE",
                                "REMOVED_BY_RECIPIENT",
                                "REMOVED_BY_PSP"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "Static QR Code",
                      "description": "Static QR Code",
                      "required": [
                        "end_to_end_id",
                        "qr_code"
                      ],
                      "properties": {
                        "end_to_end_id": {
                          "type": "string",
                          "maxLength": 32
                        },
                        "qr_code": {
                          "type": "object",
                          "description": "Decoded QR code properties",
                          "required": [
                            "kind",
                            "key",
                            "key_kind",
                            "city",
                            "recipient"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "STATIC",
                                "DYNAMIC",
                                "DYNAMIC_WITH_DUE_DATE"
                              ]
                            },
                            "key": {
                              "type": "string",
                              "description": "Pix key",
                              "minLength": 5,
                              "maxLength": 77,
                              "example": "30937116068"
                            },
                            "key_kind": {
                              "type": "string",
                              "description": "Kind from key",
                              "enum": [
                                "CPF",
                                "CNPJ",
                                "EMAIL",
                                "CELLPHONE",
                                "VIRTUAL"
                              ]
                            },
                            "category_code": {
                              "type": "string",
                              "description": "Recipient category code",
                              "maxLength": 4,
                              "default": "0000",
                              "example": "0000"
                            },
                            "city": {
                              "type": "string",
                              "maxLength": 15,
                              "example": "RIO DE JANEIRO"
                            },
                            "zip_code": {
                              "type": "string",
                              "minLength": 5,
                              "maxLength": 10,
                              "example": "90485-075"
                            },
                            "value": {
                              "type": "number",
                              "format": "double",
                              "description": "Transaction value",
                              "example": 4587.92
                            },
                            "withdraw_ispb": {
                              "type": "integer",
                              "maxLength": 8,
                              "description": "ISPB from PSS. When provided it means the QR code is for \"Pix Saque\".",
                              "example": 44568458
                            },
                            "additional_data": {
                              "type": "string"
                            },
                            "recipient": {
                              "type": "object",
                              "required": [
                                "ispb",
                                "document_type",
                                "account_type",
                                "account_number"
                              ],
                              "properties": {
                                "ispb": {
                                  "type": "integer",
                                  "maxLength": 8
                                },
                                "name": {
                                  "type": "string",
                                  "maxLength": 200
                                },
                                "document_type": {
                                  "type": "string",
                                  "enum": [
                                    "CPF",
                                    "CNPJ"
                                  ]
                                },
                                "document_number": {
                                  "type": "number",
                                  "maxLength": 14
                                },
                                "conciliation_id": {
                                  "type": "string",
                                  "maxLength": 25
                                },
                                "agency_number": {
                                  "type": "number",
                                  "maxLength": 4
                                },
                                "account_number": {
                                  "type": "number",
                                  "maxLength": 20
                                },
                                "account_digit": {
                                  "type": "number",
                                  "maxLength": 5
                                },
                                "account_type": {
                                  "type": "string",
                                  "enum": [
                                    "CHECKING_ACCOUNT",
                                    "SALARY_ACCOUNT",
                                    "SAVINGS_ACCOUNT",
                                    "PAYMENT_ACCOUNT"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Decoded Static QR Code": {
                    "value": {
                      "end_to_end_id": "E1476673020220111130052626644038",
                      "qr_code": {
                        "kind": "STATIC",
                        "category_code": "0000",
                        "city": "PORTO ALEGRE",
                        "key": "90226395090",
                        "key_kind": "CPF",
                        "recipient": {
                          "account_number": 378,
                          "account_digit": 6,
                          "account_type": "PAYMENT_ACCOUNT",
                          "agency_number": 1,
                          "conciliation_id": "_**",
                          "document_number": 90226395090,
                          "ispb": 11476673,
                          "name": "Testes Automatizados",
                          "document_type": "CPF"
                        },
                        "value": 2.44,
                        "zip_code": "90480-002"
                      }
                    }
                  },
                  "Decoded Dynamic QR Code": {
                    "value": {
                      "end_to_end_id": "E1476673020220111130052626644038",
                      "qr_code": {
                        "kind": "DYNAMIC",
                        "category_code": "0000",
                        "city": "PORTO ALEGRE",
                        "zip_code": "90480-002",
                        "key": "90226395090",
                        "key_kind": "CPF",
                        "original_value": 2.44,
                        "recipient": {
                          "account_number": 378,
                          "account_digit": 6,
                          "account_type": "PAYMENT_ACCOUNT",
                          "agency_number": 1,
                          "conciliation_id": "_**",
                          "document_number": 90226395090,
                          "ispb": 11476673,
                          "name": "Testes Automatizados",
                          "document_type": "CPF"
                        },
                        "payer": {
                          "name": "Jorge Silva",
                          "document_number": 72909231038
                        },
                        "modality": {
                          "agent": "AGENT_OR_OTHER_LEGAL_ENTITY",
                          "allow_value_alteration": false,
                          "withdraw_ispb": 145,
                          "goal": "WITHDRAW",
                          "value": 5
                        },
                        "psp_recipient_url": "http://placeholder.com",
                        "reusable": true,
                        "review": 5456,
                        "created_at": "2021-01-31T15:33:17.000Z",
                        "scanned_at": "2021-02-05T10:25:47.000Z",
                        "status": "ACTIVE",
                        "text_to_payer": "lorem ipsum",
                        "expires_in": 43200
                      }
                    }
                  },
                  "DDecoded Dynamic QR Code With Due Date": {
                    "value": {
                      "end_to_end_id": "E1476673020220111130052626644038",
                      "qr_code": {
                        "kind": "DYNAMIC_WITH_DUE_DATE",
                        "category_code": "0000",
                        "days_after_due_date": 5,
                        "deduction": 0.31,
                        "discount": 0.48,
                        "due_date": "2021-01-31",
                        "final_value": 255.57,
                        "fine": 10.05,
                        "interest": 1.55,
                        "key": "90226395090",
                        "key_kind": "CPF",
                        "original_value": 254.57,
                        "payer": {
                          "document_number": 72909231038,
                          "name": "Jorge Silva"
                        },
                        "recipient": {
                          "account_number": 378,
                          "account_digit": 6,
                          "account_type": "PAYMENT_ACCOUNT",
                          "address": "1o de Maio",
                          "agency_number": 1131,
                          "conciliation_id": "_**",
                          "document_number": 27600504081,
                          "document_type": "CPF",
                          "ispb": 11476673,
                          "name": "Testes Automatizados",
                          "city": "PORTO ALEGRE",
                          "state": "RS",
                          "zip_code": "90480-002"
                        },
                        "review": 5456,
                        "created_at": "2021-01-31T09:28:03.000Z",
                        "scanned_at": "2021-01-31T15:33:17.000Z",
                        "status": "DONE",
                        "text_to_payer": "lorem ipsum",
                        "psp_recipient_url": "http://placeholder.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailedError, InvalidDataError, EMVMerchantAccountSizeExceededError, InvalidIdempotenceKeyError, InvalidUUIDError, DecodingError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid Data Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_DATA",
                              "enum": [
                                "INVALID_DATA"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The data provided has an invalid format"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "EMV Merchant Account Size Exceeded",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                          "enum": [
                            "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "EMV Merchant Account Information field exceeded the maximum size."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Invalid Idempotence Key Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_IDEMPOTENCE_KEY",
                              "enum": [
                                "INVALID_IDEMPOTENCE_KEY"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Idempotence Key is missing or is not a valid uuid."
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid uuid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_UUID",
                              "enum": [
                                "INVALID_UUID"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid uuid"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Decoding Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "DECODING_ERROR",
                              "enum": [
                                "DECODING_ERROR"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Error decoding QR code"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data"
                    }
                  },
                  "Example 2 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 3 - EMVMerchantAccountSizeExceededError": {
                    "value": {
                      "code": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                      "message": "EMV Merchant Account Information field exceeded the maximum size"
                    }
                  },
                  "Example 4 - InvalidIdempotenceKeyError": {
                    "value": {
                      "code": "INVALID_IDEMPOTENCE_KEY",
                      "message": "Idempotence Key is missing or is not a valid uuid."
                    }
                  },
                  "Example 5 - InvalidUUIDError": {
                    "value": {
                      "code": "INVALID_UUID",
                      "message": "Invalid uuid"
                    }
                  },
                  "Example 5 - DecodingError": {
                    "value": {
                      "code": "DECODING_ERROR",
                      "message": "Error decoding QR code"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [KeyNotFoundError, AccountNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The key provided wasn't found or doesn't exist"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - KeyNotFoundError": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The key provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 2 - AccountNotFoundError": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Error with types [InvalidQRCodePayloadError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invalid QR Code payload",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INVALID_QR_CODE_PAYLOAD",
                      "enum": [
                        "INVALID_QR_CODE_PAYLOAD"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "The payload has been violated or is invalid"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "406"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InvalidQRCodePayloadError": {
                    "value": {
                      "code": "INVALID_QR_CODE_PAYLOAD",
                      "message": "The payload has been violated or is invalid"
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Timeout Error with types [DecodeTimeout]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Timeout to decode the qr code by third party integration",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "DECODE_TIMEOUT",
                          "enum": [
                            "DECODE_TIMEOUT"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request data"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "408"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - DecodeTimeout": {
                    "value": {
                      "code": "DECODE_TIMEOUT",
                      "message": "Timeout to decode the qr code"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error with types [IdempotenceKeyAlreadyExistsError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Idempotence Key Already Exists Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "IDEMPOTENCE_KEY_ALREADY_EXISTS",
                      "enum": [
                        "IDEMPOTENCE_KEY_ALREADY_EXISTS"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "The idempotence key provided already exists"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "409"
                    }
                  }
                },
                "examples": {
                  "Example 1 - IdempotenceKeyAlreadyExistsError": {
                    "value": {
                      "code": "IDEMPOTENCE_KEY_ALREADY_EXISTS",
                      "message": "The idempotence key provided already exists"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Conflict Error with types [QrCodeGoneError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Qr Code Gone Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "QR_CODE_GONE",
                      "enum": [
                        "QR_CODE_GONE"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "The QR Code is no longer available"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "410"
                    }
                  }
                },
                "examples": {
                  "Example 1 - QrCodeGoneError": {
                    "value": {
                      "code": "QR_CODE_GONE",
                      "message": "The QR Code is no longer available"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Health Check",
        "operationId": "health_check",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Not Found",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "NOT_FOUND",
                          "enum": [
                            "NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Unable to found the requested account"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/static": {
      "post": {
        "tags": [
          "create_qr_code"
        ],
        "summary": "Create a static QR Code",
        "description": "Create a static QR Code",
        "operationId": "create_static_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Idempotence-Key",
            "schema": {
              "example": "69F963C6-7487-4363-9406-A1DE2A9636D4",
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Params to create a new static QR Code",
                "required": [
                  "account_id",
                  "format",
                  "key",
                  "city"
                ],
                "properties": {
                  "account_id": {
                    "type": "string",
                    "description": "Unique identifier of the account.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "IMAGE",
                      "PAYLOAD_BASE_64",
                      "IMAGE_AND_PAYLOAD_BASE_64"
                    ],
                    "description": "Sets request return format:\n* IMAGE: Static QR Code image\n* PAYLOAD_BASE_64: Static QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Static QR Code image and payload\n",
                    "example": "IMAGE_AND_PAYLOAD_BASE_64"
                  },
                  "key": {
                    "type": "string",
                    "description": "Pix key",
                    "minLength": 5,
                    "maxLength": 77,
                    "example": "30937116068"
                  },
                  "category_code": {
                    "type": "string",
                    "description": "Recipient category code",
                    "maxLength": 4,
                    "default": "0000",
                    "example": "0000"
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "description": "Transaction value",
                    "example": 4587.92
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 15,
                    "example": "RIO DE JANEIRO"
                  },
                  "zip_code": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "example": "90485-075"
                  },
                  "recipient_conciliation_id": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "additional_data": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "withdraw_ispb": {
                    "type": "integer",
                    "description": "ISPB from PSS. When provided it means the QR code is for \"Pix Saque\".",
                    "maxLength": 8,
                    "example": 44568458
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Static QR Code successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Static QR Code",
                  "properties": {
                    "image_qr_code_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Static QR Code image"
                    },
                    "payload_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Static QR Code payload"
                    }
                  }
                },
                "examples": {
                  "Format 0": {
                    "value": {
                      "image_qr_code_base_64": ""
                    }
                  },
                  "Format 1": {
                    "value": {
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg"
                    }
                  },
                  "Format 2": {
                    "value": {
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "image_qr_code_base_64": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailedError, InvalidDataError, EMVMerchantAccountSizeExceededError, InvalidUUIDError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid Data Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_DATA",
                              "enum": [
                                "INVALID_DATA"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The data provided has an invalid format"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "EMV Merchant Account Size Exceeded",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                          "enum": [
                            "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "EMV Merchant Account Information field exceeded the maximum size."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Invalid uuid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_UUID",
                              "enum": [
                                "INVALID_UUID"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid uuid"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data"
                    }
                  },
                  "Example 2 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 3 - EMVMerchantAccountSizeExceededError": {
                    "value": {
                      "code": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                      "message": "EMV Merchant Account Information field exceeded the maximum size"
                    }
                  },
                  "Example 4 - InvalidUUIDError": {
                    "value": {
                      "code": "INVALID_UUID",
                      "message": "Invalid uuid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 3 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [KeyNotFoundError, AccountNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The key provided wasn't found or doesn't exist"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - KeyNotFoundError": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The key provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 2 - AccountNotFoundError": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dynamics/immediate": {
      "post": {
        "tags": [
          "create_qr_code"
        ],
        "summary": "Create a Dynamic Immediate QR Code",
        "description": "Create a Dynamic Immediate QR Code",
        "operationId": "create_dynamic_immediate_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Idempotence-Key",
            "schema": {
              "example": "69F963C6-7487-4363-9406-A1DE2A9636D4",
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Params to create a new dynamic immediate QR Code",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the QR Code.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "Unique identifier of the account.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "IMAGE",
                      "PAYLOAD_BASE_64",
                      "IMAGE_AND_PAYLOAD_BASE_64"
                    ],
                    "description": "Sets request return format:\n* IMAGE: Dynamic Immediate QR Code image\n* PAYLOAD_BASE_64: Dynamic Immediate QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic Immediate QR Code image and payload\n",
                    "example": "IMAGE_AND_PAYLOAD_BASE_64"
                  },
                  "key": {
                    "type": "string",
                    "description": "Pix key",
                    "minLength": 5,
                    "maxLength": 77,
                    "example": "30937116068"
                  },
                  "category_code": {
                    "type": "string",
                    "description": "Recipient category code",
                    "maxLength": 4,
                    "default": "0000",
                    "example": "0000"
                  },
                  "ispb_certificate": {
                    "type": "number",
                    "description": "The ISPB certificate number"
                  },
                  "original_value": {
                    "type": "number",
                    "format": "double",
                    "description": "The original value of the QR Code, if modality is informad the field needs to be equal to 0.00"
                  },
                  "text_to_payer": {
                    "type": "string",
                    "maxLength": 140,
                    "description": "The description from recipient to payer"
                  },
                  "recipient": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 25,
                        "description": "The name of the recipient"
                      },
                      "recipient_conciliation_id": {
                        "type": "string",
                        "minLength": 26,
                        "maxLength": 36,
                        "description": "The recipient conciliation ID"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "payer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "The name of the payer"
                      },
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ],
                        "description": "The document type of the payer"
                      },
                      "document_number": {
                        "type": "string",
                        "description": "The document number of the payer"
                      }
                    },
                    "required": [
                      "document_number"
                    ]
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 15,
                    "description": "The city of the QR Code"
                  },
                  "zip_code": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "description": "The zip code of the QR Code"
                  },
                  "additional_data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 100,
                          "description": "The name of the additional data"
                        },
                        "value": {
                          "type": "string",
                          "maxLength": 400,
                          "description": "The value of the additional data"
                        }
                      }
                    }
                  },
                  "allow_value_alteration": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether value alteration is allowed, if modality is informad the field needs to be equal to false"
                  },
                  "expiration_seconds": {
                    "type": "number",
                    "description": "The expiration time of the QR Code in seconds"
                  },
                  "modality": {
                    "type": "object",
                    "properties": {
                      "goal": {
                        "type": "string",
                        "enum": [
                          "WITHDRAW",
                          "CHANGE"
                        ],
                        "description": "The goal of the QR Code modality"
                      },
                      "value": {
                        "type": "number",
                        "description": "The value of the QR Code modality"
                      },
                      "allow_value_alteration": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether value alteration is allowed in the modality"
                      },
                      "ispb": {
                        "type": "number",
                        "description": "The ISPB number"
                      },
                      "agent": {
                        "type": "string",
                        "enum": [
                          "WITHDRAW_SERVICE_AGENT",
                          "COMMERCIAL_ESTABLISHMENT_AGENT",
                          "AGENT_OR_OTHER_LEGAL_ENTITY"
                        ],
                        "description": "The agent of the QR Code modality"
                      }
                    },
                    "required": [
                      "goal",
                      "value",
                      "ispb",
                      "agent"
                    ]
                  },
                  "reusable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the QR Code is reusable"
                  }
                },
                "required": [
                  "id",
                  "account_id",
                  "format",
                  "key",
                  "recipient",
                  "city"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dynamic Immediate QR Code successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Dynamic QR Code",
                  "properties": {
                    "external_id": {
                      "type": "string",
                      "format": "uuid-v4",
                      "description": "Unique identifier from charge"
                    },
                    "image_qr_code_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic QR Code image"
                    },
                    "payload_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic QR Code payload"
                    },
                    "payload_jws": {
                      "type": "string",
                      "description": "Signed JWS payload"
                    }
                  }
                },
                "examples": {
                  "Format 0": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 1": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 2": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailedError, InvalidDataError, EMVMerchantAccountSizeExceededError, InvalidUUIDError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid Data Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_DATA",
                              "enum": [
                                "INVALID_DATA"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The data provided has an invalid format"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "EMV Merchant Account Size Exceeded",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                          "enum": [
                            "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "EMV Merchant Account Information field exceeded the maximum size."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Invalid uuid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_UUID",
                              "enum": [
                                "INVALID_UUID"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid uuid"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data"
                    }
                  },
                  "Example 2 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 3 - EMVMerchantAccountSizeExceededError": {
                    "value": {
                      "code": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                      "message": "EMV Merchant Account Information field exceeded the maximum size"
                    }
                  },
                  "Example 4 - InvalidUUIDError": {
                    "value": {
                      "code": "INVALID_UUID",
                      "message": "Invalid uuid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 3 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [KeyNotFoundError, AccountNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The key provided wasn't found or doesn't exist"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - KeyNotFoundError": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The key provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 2 - AccountNotFoundError": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Error with types [TimeoutExceeded]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Timeout exceeded",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "TIMEOUT_EXCEEDED",
                          "enum": [
                            "TIMEOUT_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Timeout exceeded"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "408"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - DecodeTimeout": {
                    "value": {
                      "code": "TIMEOUT_EXCEEDED",
                      "message": "Timeout exceeded"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error with types [QrCodeAlreadyExistsError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Qr Code Already Exists Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "QR_CODE_ALREADY_EXISTS",
                      "enum": [
                        "QR_CODE_ALREADY_EXISTS"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Qr code already exists"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "409"
                    }
                  }
                },
                "examples": {
                  "Example 1 - QrCodeAlreadyExistsError": {
                    "value": {
                      "code": "QR_CODE_ALREADY_EXISTS",
                      "message": "Qr code already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dynamics/cobv": {
      "post": {
        "tags": [
          "create_qr_code"
        ],
        "summary": "Create a Dynamic With Due Date QR Code",
        "description": "Create a Dynamic With Due Date QR Code",
        "operationId": "create_dynamic_with_due_date_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Idempotence-Key",
            "schema": {
              "example": "69F963C6-7487-4363-9406-A1DE2A9636D4",
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Params to create a new dynamic with due date QR Code",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the QR Code.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "Unique identifier of the account.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "IMAGE",
                      "PAYLOAD_BASE_64",
                      "IMAGE_AND_PAYLOAD_BASE_64"
                    ],
                    "description": "Sets request return format:\n* IMAGE: Dynamic With Due Date QR Code image\n* PAYLOAD_BASE_64: Dynamic With Due Date QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic With Due Date QR Code image and payload\n",
                    "example": "IMAGE_AND_PAYLOAD_BASE_64"
                  },
                  "key": {
                    "type": "string",
                    "description": "Pix key",
                    "minLength": 5,
                    "maxLength": 77,
                    "example": "30937116068"
                  },
                  "category_code": {
                    "type": "string",
                    "description": "Recipient category code",
                    "maxLength": 4,
                    "default": "0000",
                    "example": "0000"
                  },
                  "original_value": {
                    "type": "number",
                    "format": "double",
                    "description": "The original value of the QR Code"
                  },
                  "text_to_payer": {
                    "type": "string",
                    "maxLength": 140,
                    "description": "The text from recipient to payer"
                  },
                  "recipient": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 25,
                        "description": "The name of the recipient"
                      },
                      "recipient_conciliation_id": {
                        "type": "string",
                        "description": "The recipient conciliation ID"
                      },
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ],
                        "description": "The document type of the recipient"
                      },
                      "document_number": {
                        "type": "string",
                        "description": "The document number of the recipient"
                      },
                      "street_name": {
                        "type": "string",
                        "maxLength": 150,
                        "description": "The street name of the recipient"
                      }
                    },
                    "required": [
                      "name",
                      "recipient_conciliation_id",
                      "document_number",
                      "document_type"
                    ]
                  },
                  "payer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "The name of the payer"
                      },
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ],
                        "description": "The document type of the payer"
                      },
                      "document_number": {
                        "type": "string",
                        "description": "The document number of the payer"
                      }
                    },
                    "required": [
                      "name",
                      "document_number"
                    ]
                  },
                  "uf": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "The uf of the QR Code"
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 15,
                    "description": "The city of the QR Code"
                  },
                  "zip_code": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "description": "The zip code of the QR Code"
                  },
                  "deduction": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Deduction value applied in the Qr Code"
                  },
                  "discount": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Discount value applied in the Qr Code"
                  },
                  "interest": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Interest value applied in the Qr Code"
                  },
                  "fine": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Fine value applied in the Qr Code"
                  },
                  "final_value": {
                    "type": "number",
                    "example": 12.23,
                    "description": "QR Code's final value"
                  },
                  "due_date": {
                    "type": "string",
                    "example": "2024-06-02",
                    "description": "QR Code's due date"
                  },
                  "days_after_due_date": {
                    "type": "number",
                    "example": 12,
                    "description": "QR Code's days after the due date that qr code is enabled to be payed"
                  },
                  "additional_data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 100,
                          "description": "The name of the additional data"
                        },
                        "value": {
                          "type": "string",
                          "maxLength": 400,
                          "description": "The value of the additional data"
                        }
                      }
                    }
                  },
                  "reusable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the QR Code is reusable"
                  }
                },
                "required": [
                  "id",
                  "account_id",
                  "format",
                  "key",
                  "uf",
                  "recipient",
                  "payer",
                  "city",
                  "zip_code",
                  "final_value",
                  "days_after_due_date",
                  "due_date"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dynamic With Due Date QR Code successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Dynamic QR Code",
                  "properties": {
                    "external_id": {
                      "type": "string",
                      "format": "uuid-v4",
                      "description": "Unique identifier from charge"
                    },
                    "image_qr_code_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic QR Code image"
                    },
                    "payload_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic QR Code payload"
                    },
                    "payload_jws": {
                      "type": "string",
                      "description": "Signed JWS payload"
                    }
                  }
                },
                "examples": {
                  "Format 0": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 1": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 2": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailedError, InvalidDataError, EMVMerchantAccountSizeExceededError, InvalidUUIDError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid Data Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_DATA",
                              "enum": [
                                "INVALID_DATA"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The data provided has an invalid format"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "EMV Merchant Account Size Exceeded",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                          "enum": [
                            "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "EMV Merchant Account Information field exceeded the maximum size."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Invalid uuid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_UUID",
                              "enum": [
                                "INVALID_UUID"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid uuid"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data"
                    }
                  },
                  "Example 2 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 3 - EMVMerchantAccountSizeExceededError": {
                    "value": {
                      "code": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                      "message": "EMV Merchant Account Information field exceeded the maximum size"
                    }
                  },
                  "Example 4 - InvalidUUIDError": {
                    "value": {
                      "code": "INVALID_UUID",
                      "message": "Invalid uuid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [ProductDisabledError, ApplicationNotFound, ProfileNotFound, QrCodeWithDueDateDisabled].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    },
                    {
                      "title": "Qr code with  with due date is not available",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "QR_CODE_WITH_DUE_DATE_DISABLED"
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Qr code with due date is not available"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 3 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  },
                  "Example 4 - QrCodeWithDueDateDisabled": {
                    "value": {
                      "code": "QR_CODE_WITH_DUE_DATE_DISABLED",
                      "message": "Qr code with due date is not available."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [KeyNotFoundError, AccountNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The key provided wasn't found or doesn't exist"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - KeyNotFoundError": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The key provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 2 - AccountNotFoundError": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Error with types [TimeoutExceeded]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Timeout exceeded",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "TIMEOUT_EXCEEDED",
                          "enum": [
                            "TIMEOUT_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Timeout exceeded"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "408"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - DecodeTimeout": {
                    "value": {
                      "code": "TIMEOUT_EXCEEDED",
                      "message": "Timeout exceeded"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error with types [QrCodeAlreadyExistsError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Qr Code Already Exists Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "QR_CODE_ALREADY_EXISTS",
                      "enum": [
                        "QR_CODE_ALREADY_EXISTS"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Qr code already exists"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "409"
                    }
                  }
                },
                "examples": {
                  "Example 1 - QrCodeAlreadyExistsError": {
                    "value": {
                      "code": "QR_CODE_ALREADY_EXISTS",
                      "message": "Qr code already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dynamics/immediate/{id}": {
      "patch": {
        "tags": [
          "update_qr_code"
        ],
        "summary": "Update an Dynamic Immediate QR Code",
        "description": "Update an Dynamic Immediate QR Code",
        "operationId": "update_dynamic_immediate_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID from QR Code"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Params to update an dynamic immediate QR Code",
                "properties": {
                  "account_id": {
                    "type": "string",
                    "description": "Unique account identifier. Mandatory when providing the key.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "IMAGE",
                      "PAYLOAD_BASE_64",
                      "IMAGE_AND_PAYLOAD_BASE_64"
                    ],
                    "description": "Sets request return format:\n* IMAGE: Dynamic Immediate QR Code image\n* PAYLOAD_BASE_64: Dynamic Immediate QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic Immediate QR Code image and payload\n",
                    "example": "IMAGE_AND_PAYLOAD_BASE_64"
                  },
                  "key": {
                    "type": "string",
                    "description": "Pix key",
                    "minLength": 5,
                    "maxLength": 77,
                    "example": "30937116068"
                  },
                  "category_code": {
                    "type": "string",
                    "description": "Recipient category code",
                    "maxLength": 4,
                    "default": "0000",
                    "example": "0000"
                  },
                  "ispb_certificate": {
                    "type": "number",
                    "description": "The ISPB certificate number"
                  },
                  "original_value": {
                    "type": "number",
                    "format": "double",
                    "description": "The original value of the QR Code"
                  },
                  "text_to_payer": {
                    "type": "string",
                    "maxLength": 140,
                    "description": "The text from recipient to payer"
                  },
                  "recipient": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 25,
                        "description": "The name of the recipient"
                      },
                      "recipient_conciliation_id": {
                        "type": "string",
                        "description": "The recipient conciliation ID"
                      }
                    }
                  },
                  "payer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "The name of the payer"
                      },
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ],
                        "description": "The document type of the payer"
                      },
                      "document_number": {
                        "type": "number",
                        "description": "The document number of the payer"
                      }
                    }
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 15,
                    "description": "The city of the QR Code"
                  },
                  "zip_code": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "description": "The zip code of the QR Code"
                  },
                  "additional_data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 100,
                          "description": "The name of the additional data"
                        },
                        "value": {
                          "type": "string",
                          "maxLength": 400,
                          "description": "The value of the additional data"
                        }
                      }
                    }
                  },
                  "allow_value_alteration": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether value alteration is allowed"
                  },
                  "expiration_seconds": {
                    "type": "number",
                    "description": "The expiration time of the QR Code in seconds"
                  },
                  "modality": {
                    "type": "object",
                    "properties": {
                      "goal": {
                        "type": "string",
                        "enum": [
                          "WITHDRAW",
                          "CHANGE"
                        ],
                        "description": "The goal of the QR Code modality"
                      },
                      "value": {
                        "type": "number",
                        "description": "The value of the QR Code modality"
                      },
                      "allow_value_alteration": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether value alteration is allowed in the modality"
                      },
                      "ispb": {
                        "type": "number",
                        "description": "The ISPB number"
                      },
                      "agent": {
                        "type": "string",
                        "enum": [
                          "WITHDRAW_SERVICE_AGENT",
                          "COMMERCIAL_ESTABLISHMENT_AGENT",
                          "AGENT_OR_OTHER_LEGAL_ENTITY"
                        ],
                        "description": "The agent of the QR Code modality"
                      }
                    }
                  },
                  "reusable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the QR Code is reusable"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DONE",
                      "REMOVED_BY_RECIPIENT",
                      "REMOVED_BY_PSP"
                    ],
                    "description": "Billing status"
                  }
                },
                "required": [
                  "format",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dynamic Immediate QR Code successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Dynamic Immediate QR Code",
                  "properties": {
                    "external_id": {
                      "type": "string",
                      "format": "uuid-v4",
                      "description": "Unique identifier from charge"
                    },
                    "revision": {
                      "type": "number",
                      "description": "Billing review identifier"
                    },
                    "image_qr_code_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic Immediate QR Code image"
                    },
                    "payload_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic Immediate QR Code payload"
                    },
                    "payload_jws": {
                      "type": "string",
                      "description": "Signed JWS payload"
                    }
                  }
                },
                "examples": {
                  "Format 0": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "revision": 1,
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 1": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "revision": 1,
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 2": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "revision": 1,
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailedError, InvalidDataError, EMVMerchantAccountSizeExceededError, InvalidUUIDError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid Data Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_DATA",
                              "enum": [
                                "INVALID_DATA"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The data provided has an invalid format"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "EMV Merchant Account Size Exceeded",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                          "enum": [
                            "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "EMV Merchant Account Information field exceeded the maximum size."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Invalid uuid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_UUID",
                              "enum": [
                                "INVALID_UUID"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid uuid"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data"
                    }
                  },
                  "Example 2 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 3 - EMVMerchantAccountSizeExceededError": {
                    "value": {
                      "code": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                      "message": "EMV Merchant Account Information field exceeded the maximum size"
                    }
                  },
                  "Example 4 - InvalidUUIDError": {
                    "value": {
                      "code": "INVALID_UUID",
                      "message": "Invalid uuid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    },
                    {
                      "title": "The provided account has been disabled.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_DISABLED",
                          "enum": [
                            "ACCOUNT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The provided account has been disabled."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 3 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  },
                  "Example 4 - AccountDisabledError": {
                    "value": {
                      "code": "ACCOUNT_DISABLED",
                      "message": "The provided account has been disabled."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [KeyNotFoundError, QRCodeNotFoundError, AccountNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The key provided wasn't found or doesn't exist"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "QR Code Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "QR_CODE_NOT_FOUND",
                          "enum": [
                            "QR_CODE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "QR code not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - KeyNotFoundError": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The key provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 2 - QRCodeNotFoundError": {
                    "value": {
                      "code": "QR_CODE_NOT_FOUND",
                      "message": "The qr code provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 3 - AccountNotFoundError": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Error with types [TimeoutExceeded]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Timeout exceeded",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "TIMEOUT_EXCEEDED",
                          "enum": [
                            "TIMEOUT_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Timeout exceeded"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "408"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - DecodeTimeout": {
                    "value": {
                      "code": "TIMEOUT_EXCEEDED",
                      "message": "Timeout exceeded"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dynamics/cobv/{id}": {
      "patch": {
        "tags": [
          "update_qr_code"
        ],
        "summary": "Update an Dynamic With Due Date QR Code",
        "description": "Update an Dynamic With Due Date QR Code",
        "operationId": "update_dynamic_with_due_date_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID from QR Code"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Params to update an dynamic immediate QR Code",
                "properties": {
                  "account_id": {
                    "type": "string",
                    "description": "Unique account identifier. Mandatory when providing the key.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "IMAGE",
                      "PAYLOAD_BASE_64",
                      "IMAGE_AND_PAYLOAD_BASE_64"
                    ],
                    "description": "Sets request return format:\n* IMAGE: Dynamic Immediate QR Code image\n* PAYLOAD_BASE_64: Dynamic Immediate QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic Immediate QR Code image and payload\n",
                    "example": "IMAGE_AND_PAYLOAD_BASE_64"
                  },
                  "key": {
                    "type": "string",
                    "description": "Pix key",
                    "minLength": 5,
                    "maxLength": 77,
                    "example": "30937116068"
                  },
                  "category_code": {
                    "type": "string",
                    "description": "Recipient category code",
                    "maxLength": 4,
                    "default": "0000",
                    "example": "0000"
                  },
                  "ispb_certificate": {
                    "type": "number",
                    "description": "The ISPB certificate number"
                  },
                  "original_value": {
                    "type": "number",
                    "format": "double",
                    "description": "The original value of the QR Code"
                  },
                  "text_to_payer": {
                    "type": "string",
                    "maxLength": 140,
                    "description": "The text from recipient to payer"
                  },
                  "recipient": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 25,
                        "description": "The name of the recipient"
                      },
                      "nickname": {
                        "type": "string",
                        "maxLength": 100,
                        "description": "The nickname of the recipient"
                      },
                      "recipient_conciliation_id": {
                        "type": "string",
                        "description": "The recipient conciliation ID"
                      },
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ],
                        "description": "The document type of the recipient"
                      },
                      "document_number": {
                        "type": "string",
                        "description": "The document number of the recipient"
                      },
                      "street_name": {
                        "type": "string",
                        "maxLength": 150,
                        "description": "The street name of the recipient"
                      }
                    }
                  },
                  "payer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "The name of the payer"
                      },
                      "document_type": {
                        "type": "string",
                        "enum": [
                          "CPF",
                          "CNPJ"
                        ],
                        "description": "The document type of the payer"
                      },
                      "document_number": {
                        "type": "number",
                        "description": "The document number of the payer"
                      }
                    }
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 15,
                    "description": "The city of the QR Code"
                  },
                  "zip_code": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "description": "The zip code of the QR Code"
                  },
                  "deduction": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Deduction value applied in the Qr Code"
                  },
                  "discount": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Discount value applied in the Qr Code"
                  },
                  "interest": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Interest value applied in the Qr Code"
                  },
                  "fine": {
                    "type": "number",
                    "example": 12.23,
                    "description": "Fine value applied in the Qr Code"
                  },
                  "final_value": {
                    "type": "number",
                    "example": 12.23,
                    "description": "QR Code's final value"
                  },
                  "due_date": {
                    "type": "string",
                    "example": "2024-06-02",
                    "description": "QR Code's due date"
                  },
                  "days_after_due_date": {
                    "type": "number",
                    "example": 12,
                    "description": "QR Code's days after the due date that qr code is enabled to be payed"
                  },
                  "additional_data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 100,
                          "description": "The name of the additional data"
                        },
                        "value": {
                          "type": "string",
                          "maxLength": 400,
                          "description": "The value of the additional data"
                        }
                      }
                    }
                  },
                  "reusable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the QR Code is reusable"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "DONE",
                      "REMOVED_BY_RECIPIENT",
                      "REMOVED_BY_PSP"
                    ],
                    "description": "Billing status"
                  }
                },
                "required": [
                  "format",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dynamic With Due Date QR Code successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Dynamic Immediate QR Code",
                  "properties": {
                    "external_id": {
                      "type": "string",
                      "format": "uuid-v4",
                      "description": "Unique identifier from charge"
                    },
                    "revision": {
                      "type": "number",
                      "description": "Billing review identifier"
                    },
                    "image_qr_code_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic Immediate QR Code image"
                    },
                    "payload_base_64": {
                      "type": "string",
                      "format": "base64",
                      "description": "Dynamic Immediate QR Code payload"
                    },
                    "payload_jws": {
                      "type": "string",
                      "description": "Signed JWS payload"
                    }
                  }
                },
                "examples": {
                  "Format 0": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "revision": 1,
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 1": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "revision": 1,
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  },
                  "Format 2": {
                    "value": {
                      "external_id": "d5491f95-e254-44bf-b428-704365825f02",
                      "revision": 1,
                      "payload_base_64": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg",
                      "image_qr_code_base_64": "",
                      "payload_jws": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIi LCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29t L3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5 YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0 OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUi LCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRv ciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAw MC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0 ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZv QWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25h bCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHD p8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlh dCI6MTYwMjYxNDY1Nn0.Ml RauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4Cb Xk26qROxeE9wiOavBq-O47C5s hlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jB WyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkY neBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailedError, InvalidDataError, EMVMerchantAccountSizeExceededError, InvalidUUIDError, AccountDisabledError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "The provided data is invalid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "VALIDATION_FAILED",
                              "enum": [
                                "VALIDATION_FAILED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid request data"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Invalid Data Error",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_DATA",
                              "enum": [
                                "INVALID_DATA"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The data provided has an invalid format"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "EMV Merchant Account Size Exceeded",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                          "enum": [
                            "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "EMV Merchant Account Information field exceeded the maximum size."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    },
                    {
                      "title": "Invalid uuid",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "INVALID_UUID",
                              "enum": [
                                "INVALID_UUID"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Invalid uuid"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "400"
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "The provided account has been disabled.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_DISABLED",
                          "enum": [
                            "ACCOUNT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The provided account has been disabled."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data"
                    }
                  },
                  "Example 2 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 3 - EMVMerchantAccountSizeExceededError": {
                    "value": {
                      "code": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
                      "message": "EMV Merchant Account Information field exceeded the maximum size"
                    }
                  },
                  "Example 4 - InvalidUUIDError": {
                    "value": {
                      "code": "INVALID_UUID",
                      "message": "Invalid uuid"
                    }
                  },
                  "Example 5 - AccountDisabledError": {
                    "value": {
                      "code": "ACCOUNT_DISABLED",
                      "message": "The provided account has been disabled."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 3 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [KeyNotFoundError, QRCodeNotFoundError, AccountNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The key provided wasn't found or doesn't exist"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "QR Code Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "QR_CODE_NOT_FOUND",
                          "enum": [
                            "QR_CODE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "QR code not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - KeyNotFoundError": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The key provided wasn't found or doesn't exist"
                    }
                  },
                  "Example 2 - QRCodeNotFoundError": {
                    "value": {
                      "code": "QR_CODE_NOT_FOUND",
                      "message": "QR code not found."
                    }
                  },
                  "Example 3 - AccountNotFoundError": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Error with types [TimeoutExceeded]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Timeout exceeded",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "TIMEOUT_EXCEEDED",
                          "enum": [
                            "TIMEOUT_EXCEEDED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Timeout exceeded"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "408"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - DecodeTimeout": {
                    "value": {
                      "code": "TIMEOUT_EXCEEDED",
                      "message": "Timeout exceeded"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/cob/{id}": {
      "get": {
        "tags": [
          "get_qr_code_jws"
        ],
        "summary": "Get a JWS from Dynamic Immediate QR Code",
        "description": "Get a JWS from Dynamic Immediate QR Code",
        "operationId": "get_jws_dynamic_cob_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "example": "69F963C6-7487-4363-9406-A1DE2A9636D4",
              "type": "string",
              "format": "uuid",
              "description": "ID from QR Code"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "QR Code JWS successfully returned",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29tL3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUiLCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRvciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAwMC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZvQWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25hbCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHDp8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlhdCI6MTYwMjYxNDY1Nn0.MlRauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4CbXk26qROxeE9wiOavBq-O47C5shlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jBWyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkYneBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                }
              }
            }
          },
          "400": {
            "description": "Error with types [BacenInvalidDataError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invalid Data Error",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error",
                          "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadOperacaoInvalida"
                        },
                        "title": {
                          "type": "string",
                          "description": "Describes a title informing a reason for the error",
                          "example": "Requisicao invalida."
                        },
                        "detail": {
                          "type": "string",
                          "description": "Describes a message informing a reason for the error",
                          "example": "A cobranca existe, mas a requisicao e invalida."
                        },
                        "status": {
                          "type": "number",
                          "description": "Error status code",
                          "example": 400
                        },
                        "violacoes": {
                          "type": "array",
                          "description": "Array of violations",
                          "items": {
                            "type": "object",
                            "properties": {
                              "propriedade": {
                                "type": "string",
                                "description": "Field property from error",
                                "example": "id"
                              },
                              "razao": {
                                "type": "string",
                                "description": "Reason of the error",
                                "example": "Formato id invalido"
                              },
                              "valor": {
                                "type": "string",
                                "description": "Value of the property",
                                "example": "cd1e31ab234234234"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - BacenInvalidDataError": {
                    "value": {
                      "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadOperacaoInvalida",
                      "title": "Requisicao invalida.",
                      "detail": "A cobranca existe, mas a requisicao e invalida.",
                      "status": 400,
                      "violacoes": [
                        {
                          "propriedade": "id",
                          "razao": "Formato id invalido",
                          "valor": "cd1e31ab234234234"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [BacenNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Not Found Error",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error",
                          "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado"
                        },
                        "title": {
                          "type": "string",
                          "description": "Describes a title informing a reason for the error",
                          "example": "Cobranca nao encontrada."
                        },
                        "detail": {
                          "type": "string",
                          "description": "Describes a message informing a reason for the error",
                          "example": "A cobranca em questao nao foi encontrada para a location requisitada."
                        },
                        "status": {
                          "type": "number",
                          "description": "Error status code",
                          "example": 404
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - BacenNotFoundError": {
                    "value": {
                      "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado",
                      "title": "Cobranca nao encontrada.",
                      "status": 404,
                      "detail": "A cobranca em questao nao foi encontrada para a location requisitada."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Error with types [BacenGoneError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Gone Error",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error",
                          "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado"
                        },
                        "title": {
                          "type": "string",
                          "description": "Describes a title informing a reason for the error",
                          "example": "Cobranca nao encontrada."
                        },
                        "detail": {
                          "type": "string",
                          "description": "Describes a message informing a reason for the error",
                          "example": "A cobranca em questao nao foi encontrada para a location requisitada."
                        },
                        "status": {
                          "type": "number",
                          "description": "Error status code",
                          "example": 410
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - BacenGoneError": {
                    "value": {
                      "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado",
                      "title": "Cobranca nao encontrada.",
                      "status": 410,
                      "detail": "A cobranca em questao nao foi encontrada para a location requisitada."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/cobv/{id}": {
      "get": {
        "tags": [
          "get_qr_code_jws"
        ],
        "summary": "Get a JWS from Dynamic With Due Date QR Code",
        "description": "Get a JWS from Dynamic With Due Date QR Code",
        "operationId": "get_jws_dynamic_cobv_qr_code",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "example": "69F963C6-7487-4363-9406-A1DE2A9636D4",
              "type": "string",
              "format": "uuid",
              "description": "ID from QR Code"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "city_code",
            "schema": {
              "example": 1234567,
              "type": "number",
              "description": "IBGE code from city"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "payment_date",
            "schema": {
              "example": "2024-01-01",
              "type": "string",
              "format": "date",
              "description": "Date to realize the payment, has to be greater than now date and in format 'yyyy-mm-dd'"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "QR Code JWS successfully returned",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "eyJhbGciOiJQUzUxMiIsImtpZCI6IjUwQTM5Qzc0MUE0RTFDQjQxN0Y2OEM2Q0MwMkY2M0JFODg2RDg1MzIiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJVS09jZEJwT0hMUVg5b3hzd0M5anZvaHRoVEkiLCJqa3UiOiJodHRwczovL2V4ZW1wbG8uY29tL3BpeC9qZHBpL3FyYy9qd2tzIn0.eyJ2ZXJzYW8iOiIxLjAuMCIsImRvY3VtZW50byI6eyJpZCI6IjNmOTk0YTY2LTgyMzAtNGM5YS1hZDJhLTBmZmU0YjY5YWQ2OCIsInJldmlzYW8iOjB9LCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIxMy8xMC8yMDIwIDE4OjQ0OjExIiwiYXByZXNlbnRhY2FvIjoiMTMvMTAvMjAyMCAxODo0NDoxMSIsImV4cGlyYWNhbyI6IjIzLzEyLzIwMjAgMjM6NTk6MDUiLCJ2ZW5jaW1lbnRvIjoiMjMvMDEvMjAyMCAwMDowMDowMCIsInJlY2ViaXZlbEFwb3NWZW5jaW1lbnRvIjp0cnVlfSwicGFnYWRvciI6eyJjbnBqIjoiNDM1Odc5ODAwMDEwNyIsIm5vbWUiOiJDaWNsYW5vIGRlIFRhbCJ9LCJ2YwxvciI6eyJvcmlnaW5hbCI6MTAwMC4wMSwiZmluYWwiOjExMDAuMDEsImp1cm9zIjoxMDAuMCwibXVsdGEiOjEwLjAsImRlc2NvbnRvIjoxMC4wLCJwZXJtaXRlQWx0ZXJhY2FvIjpmYWxzZX0sImNoYXZlIjoiZnVsYW5vLnRhbEBwcm92ZWRvci5jb20uYnIiLCJ0eGlkIjoiSkRQSTIwMjAwMTAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJQZXNxdWlzYSBkZSBzYXRpc2Zhw6fDo28iLCJpbmZvQWRpY2lvbmFpcyI6W3sibm9tZSI6IkRldGFsaGVzIGRvIFBhZ2FtZW50byIsInZhbG9yIjoiSW5mb3JtYcOnw6NvIEFkaWNpb25hbCBkbyBQU1AgZG8gUmVjZWJlZG9yIn0seyJub21lIjoiRGV0YWxoZXMgZG8gUGFnYW1lbnRvIDIiLCJ2YwxvciI6IkluZm9ybWHDp8OjbyBBZGljaW9uYWwgZG8gUFNQIGRvIFJlY2ViZWRvciJ9XswiZXhwIjoxNjA4Nzc4NzQ1LCJuYmYiOjE2MDI2MTQ2NTYsImlhdCI6MTYwMjYxNDY1Nn0.MlRauOQlIqPxRf4sjnoMuJRzbFLcEaF4KQmP5Hm9ilCht89kXQCiGdNHQZ3cU0_Civf2zQsNwe3w98nDvjasw0XBmBkCCAAY46H4CbXk26qROxeE9wiOavBq-O47C5shlmg_fhbdJX7xdmTdtuHN6RWqCII0JzIGcTyiEwJxsKt5Qb1dYWFINnh9xhb3J9KsWJRwESK4jBWyIIGLr7zVKot5lFUt7hTgU8c6QeQijwjwqmxMUF8z2h-y7dV0prCt7o-JpbdcdTXAL7CuTte8WfH7nGiljeiDRdEkYneBvzBRpd84RMR1392bQ4gppaxHU7S-ZkakJ5hSHoQKzg"
                }
              }
            }
          },
          "400": {
            "description": "Error with types [BacenInvalidDataError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invalid Data Error",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error",
                          "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadOperacaoInvalida"
                        },
                        "title": {
                          "type": "string",
                          "description": "Describes a title informing a reason for the error",
                          "example": "Requisicao invalida."
                        },
                        "detail": {
                          "type": "string",
                          "description": "Describes a message informing a reason for the error",
                          "example": "A cobranca existe, mas a requisicao e invalida."
                        },
                        "status": {
                          "type": "number",
                          "description": "Error status code",
                          "example": 400
                        },
                        "violacoes": {
                          "type": "array",
                          "description": "Array of violations",
                          "items": {
                            "type": "object",
                            "properties": {
                              "propriedade": {
                                "type": "string",
                                "description": "Field property from error",
                                "example": "id"
                              },
                              "razao": {
                                "type": "string",
                                "description": "Reason of the error",
                                "example": "Formato id invalido"
                              },
                              "valor": {
                                "type": "string",
                                "description": "Value of the property",
                                "example": "cd1e31ab234234234"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - BacenInvalidDataError": {
                    "value": {
                      "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadOperacaoInvalida",
                      "title": "Requisicao invalida.",
                      "detail": "A cobranca existe, mas a requisicao e invalida.",
                      "status": 400,
                      "violacoes": [
                        {
                          "propriedade": "id",
                          "razao": "Formato id invalido",
                          "valor": "cd1e31ab234234234"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [BacenNotFoundError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Not Found Error",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error",
                          "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado"
                        },
                        "title": {
                          "type": "string",
                          "description": "Describes a title informing a reason for the error",
                          "example": "Cobranca nao encontrada."
                        },
                        "detail": {
                          "type": "string",
                          "description": "Describes a message informing a reason for the error",
                          "example": "A cobranca em questao nao foi encontrada para a location requisitada."
                        },
                        "status": {
                          "type": "number",
                          "description": "Error status code",
                          "example": 404
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - BacenNotFoundError": {
                    "value": {
                      "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado",
                      "title": "Cobranca nao encontrada.",
                      "status": 404,
                      "detail": "A cobranca em questao nao foi encontrada para a location requisitada."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Error with types [BacenGoneError]",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Gone Error",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error",
                          "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado"
                        },
                        "title": {
                          "type": "string",
                          "description": "Describes a title informing a reason for the error",
                          "example": "Cobranca nao encontrada."
                        },
                        "detail": {
                          "type": "string",
                          "description": "Describes a message informing a reason for the error",
                          "example": "A cobranca em questao nao foi encontrada para a location requisitada."
                        },
                        "status": {
                          "type": "number",
                          "description": "Error status code",
                          "example": 410
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1 - BacenGoneError": {
                    "value": {
                      "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado",
                      "title": "Cobranca nao encontrada.",
                      "status": 410,
                      "detail": "A cobranca em questao nao foi encontrada para a location requisitada."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/jwks": {
      "get": {
        "tags": [
          "get_jwks"
        ],
        "summary": "Get the JWKS",
        "operationId": "GetJWKS",
        "description": "Get the JWKS",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "JWKS successfully returned the data can be searched in https://datatracker.ietf.org/doc/html/rfc7517",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kty": {
                      "type": "string",
                      "example": "RSA",
                      "description": "Key Type"
                    },
                    "n": {
                      "type": "string",
                      "example": "ucrGOh24iWZIp4U4KFtS_VuU6XOJIOS6iQS0ucxsvsG6JHlAIxFyc0FcfVF_W14ObjFv9d4dyWx3gVnO4Asy82SCU2nCVfkTqYK9apGsTuSGv2gQyiPhNnYpO1Rglsk4Py1Xzebjex23eKgqDJ5gnklrpWkKctN9BHiif5EbAAKBuhkN9xqkAClqkdmGpAiR2e0ZxSJg0XLPnHKMlsJtN1gjyYAs918tM15YvMy_7X-cemraQSVrm53GuQSIMIZqV_ZmrEzOnczdWIiV352j-xrMClh719dKGaE-Zb3b87c80co-2HgIoi1t8D2qTU5DLfodsLh7rbrgKRlBGopECQ",
                      "description": "Private Key Representation and Blinding"
                    },
                    "e": {
                      "type": "string",
                      "example": "AQAB",
                      "description": "Private Key Representation and Blinding"
                    },
                    "kid": {
                      "type": "string",
                      "example": "0F9E7F2CF9CC25B92F96FC2CF810B02D2C3B5617C81A8661157E3DDB48FCCE2E",
                      "description": "Key ID"
                    },
                    "x5t": {
                      "type": "string",
                      "example": "PMqWrSw74iE6IQhDtRFTG+A5WYc=",
                      "description": "X.509 Certificate SHA-1 Thumbprint"
                    },
                    "x5t#S256": {
                      "type": "string",
                      "example": "D55/LPnMJbkvlvws+BCwLSw7VhfIGoZhFX4920j8zi4=",
                      "description": "X.509 Certificate SHA-256 Thumbprint"
                    },
                    "x5c": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "X.509 Certificate Chain",
                        "example": "MIIHYTCCBkmgAwIBAgIQVyX+yMTZvNFjKIn15rmMiDANBgkqhkiG9w0BAQsFADCBkTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMTkwNwYDVQQDEzBTZWN0aWdvIFJTQSBFeHRlbmRlZCBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIgQ0EwHhcNMjQwNTE1MDAwMDAwWhcNMjUwNTE1MjM1OTU5WjCByjEbMBkGA1UEBRMSMTEuNDc2LjY3My8wMDAxLTM5MRMwEQYLKwYBBAGCNzwCAQMTAkJSMR0wGwYDVQQPExRQcml2YXRlIE9yZ2FuaXphdGlvbjELMAkGA1UEBhMCQlIxGjAYBgNVBAgTEVJpbyBHcmFuZGUgZG8gU3VsMScwJQYDVQQKEx5CQU5DTyBSQU5ET04gKEJBTkNPIFJBTkRPTiBTQSkxJTAjBgNVBAMTHHBpeC1xcmNvZGUtaC5iYW5jb3JhbmRvbi5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC5ysY6HbiJZkinhTgoW1L9W5Tpc4kg5LqJBLS5zGy+wbokeUAjEXJzQVx9UX9bXg5uMW/13h3JbHeBWc7gCzLzZIJTacJV+ROpgr1qkaxO5Ia/aBDKI+E2dik7VGCWyTg/LVfN5uN7Hbd4qCoMnmCeSWulaQpy030EeKJ/kRsAAoG6GQ33GqQAKWqR2YakCJHZ7RnFImDRcs+ccoyWwm03WCPJgCz3Xy0zXli8zL/tf5x6atpBJWubnca5BIgwhmpX9masTM6dzN1YiJXfnaP7GswKWHvX10oZoT5lvdvztzzRyj7YeAiiLW3wPapNTkMt+h2wuHutuuApGUEaikQJAgMBAAGjggN4MIIDdDAfBgNVHSMEGDAWgBQsaf+AyYeQrjThtOdMk4WZQOmnsjAdBgNVHQ4EFgQUwhFPO2O5udFRl1YTj1MhCk5e2QIwDgYDVR0PAQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMEkGA1UdIARCMEAwNQYMKwYBBAGyMQECAQUBMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAcGBWeBDAEBMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwuc2VjdGlnby5jb20vU2VjdGlnb1JTQUV4dGVuZGVkVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNybDCBhgYIKwYBBQUHAQEEejB4MFEGCCsGAQUFBzAChkVodHRwOi8vY3J0LnNlY3RpZ28uY29tL1NlY3RpZ29SU0FFeHRlbmRlZFZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5jcnQwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLnNlY3RpZ28uY29tMEkGA1UdEQRCMECCHHBpeC1xcmNvZGUtaC5iYW5jb3JhbmRvbi5jb22CIHd3dy5waXgtcXJjb2RlLWguYmFuY29yYW5kb24uY29tMIIBfAYKKwYBBAHWeQIEAgSCAWwEggFoAWYAdgDPEVbu1S58r/OHW9lpLpvpGnFnSrAX7KwB0lt3zsw7CAAAAY9802QMAAAEAwBHMEUCIQDI4ddnbELDMsGwkXIV38Cv74bic6EQlWzFOSVkIKk6XgIgR+gCS/Kt3PCK1fim/PbAxoApAoFaIJbUWDrk22S3eicAdQCi4wrkRe+9rZt+OO1HZ3dT14JbhJTXK14bLMS5UKRH5wAAAY9802PtAAAEAwBGMEQCIHNoOga82pmmV5VDIBbs8KfMx52/hr220kfc0fxcDM9fAiB3PS5qHaEQGUyMMz9NozBuRwWRzRnkJgSQOLgkBYA8GgB1AE51oydcmhDDOFts1N8/Uusd8OCOG41pwLH6ZLFimjnfAAABj3zTY+wAAAQDAEYwRAIgf7Q2TJGWKmacLnnET0abjRh1paY/u+zPx0VWC8xMvnwCIB5Xcn5JjtaWwlJY9LLr7wRdTAtvoJg0fyGA1tvj0gJaMA0GCSqGSIb3DQEBCwUAA4IBAQB2pi4VJlJMtaP0epGsglq6hOBWS8Rp1Ba9GGNR9xQ2aUaT/5sLMG12djgWqWTLQMOJxxSV72sXhwrCy+8qKLEtaB4TEhPmuTKJtCRXmVUvl/EkSCG8CyKcbq60kmzsFa0OBjtG/RRg3FXYZpH604ZztLxlIHGtclAQAxqNmGIFGtrlDS4h/w3jVvtMGnV2keYGCHgZDp9JbZpQLz6Kdo9JRRCI+bwarI1MpLx1d1bdBoiG4pxA/m1hCBtTFL17R5N5LHLFejCsO0f/en+ZDXrotcYZSZMlSS7Uj/NapQI2PpZcU285lIWmnQBjPJ0cHgQ4wmD5HsYv+J1qR4jgQdcJ"
                      }
                    },
                    "key_ops": {
                      "type": "array",
                      "description": "Key Operations",
                      "items": {
                        "type": "string",
                        "example": "verify"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "description": "Bearer auth (https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."
      }
    },
    "schemas": {
      "DecodeQRCodeSchema": {
        "type": "object",
        "description": "Params to decode a QR Code",
        "required": [
          "payload",
          "account_id"
        ],
        "properties": {
          "payload": {
            "type": "string",
            "description": "Payload decode from QR Code.",
            "format": "base64",
            "example": "MDAwMjAxMjYzMzAwMTRici5nb3YuYmNiLnBpeDAxMTE5MDIyNjM5NTA5MDUyMDQwMDAwNTMwMzk4NjU0MDQyLjAwNTgwMkJSNTkxM0Z1bGFubyBkZSBUYWw2MDEyUE9SVE8gQUxFR1JFNjIwNzA1MDMqKio2MzA0RDNDQg"
          },
          "account_id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "city_code": {
            "type": "string",
            "minLength": 5,
            "example": "string"
          },
          "intended_payment_date": {
            "type": "string",
            "example": "2021-01-31",
            "format": "yyyy-mm-dd"
          }
        }
      },
      "decodedDynamicQRCode": {
        "type": "object",
        "title": "Dynamic QR Code",
        "description": "Dynamic QR Code",
        "required": [
          "end_to_end_id",
          "qr_code"
        ],
        "properties": {
          "end_to_end_id": {
            "type": "string",
            "maxLength": 32
          },
          "qr_code": {
            "type": "object",
            "description": "Decoded QR code properties",
            "required": [
              "kind",
              "key",
              "key_kind",
              "review",
              "recipient",
              "original_value",
              "city",
              "created_at",
              "scanned_at",
              "status"
            ],
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "STATIC",
                  "DYNAMIC",
                  "DYNAMIC_WITH_DUE_DATE"
                ]
              },
              "key": {
                "type": "string",
                "description": "Pix key",
                "minLength": 5,
                "maxLength": 77,
                "example": "30937116068"
              },
              "key_kind": {
                "type": "string",
                "description": "Kind from key",
                "enum": [
                  "CPF",
                  "CNPJ",
                  "EMAIL",
                  "CELLPHONE",
                  "VIRTUAL"
                ]
              },
              "category_code": {
                "type": "string",
                "description": "Recipient category code",
                "maxLength": 4,
                "default": "0000",
                "example": "0000"
              },
              "city": {
                "type": "string",
                "maxLength": 15,
                "example": "RIO DE JANEIRO"
              },
              "zip_code": {
                "type": "string",
                "minLength": 5,
                "maxLength": 10,
                "example": "90485-075"
              },
              "review": {
                "type": "integer",
                "maxLength": 5
              },
              "original_value": {
                "type": "number",
                "format": "double",
                "description": "Transaction value",
                "example": 4587.92
              },
              "allow_value_alteration": {
                "type": "boolean"
              },
              "text_to_payer": {
                "type": "string",
                "maxLength": 140
              },
              "recipient": {
                "type": "object",
                "required": [
                  "ispb",
                  "document_type",
                  "account_type",
                  "account_number"
                ],
                "properties": {
                  "ispb": {
                    "type": "integer",
                    "maxLength": 8
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "document_type": {
                    "type": "string",
                    "enum": [
                      "CPF",
                      "CNPJ"
                    ]
                  },
                  "document_number": {
                    "type": "number",
                    "maxLength": 14
                  },
                  "conciliation_id": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "agency_number": {
                    "type": "number",
                    "maxLength": 4
                  },
                  "account_number": {
                    "type": "number",
                    "maxLength": 20
                  },
                  "account_digit": {
                    "type": "number",
                    "maxLength": 5
                  },
                  "account_type": {
                    "type": "string",
                    "enum": [
                      "CHECKING_ACCOUNT",
                      "SALARY_ACCOUNT",
                      "SAVINGS_ACCOUNT",
                      "PAYMENT_ACCOUNT"
                    ]
                  }
                }
              },
              "payer": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "document_number": {
                    "type": "number",
                    "maxLength": 14
                  }
                }
              },
              "modality": {
                "type": "object",
                "properties": {
                  "goal": {
                    "type": "string",
                    "enum": [
                      "WITHDRAW",
                      "CHANGE"
                    ]
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "example": 4587.92
                  },
                  "allow_value_alteration": {
                    "type": "boolean"
                  },
                  "withdraw_ispb": {
                    "type": "integer",
                    "description": "Service provider",
                    "example": 44568458
                  },
                  "agent": {
                    "type": "string",
                    "enum": [
                      "WITHDRAW_SERVICE_AGENT",
                      "COMMERCIAL_ESTABLISHMENT_AGENT",
                      "AGENT_OR_OTHER_LEGAL_ENTITY"
                    ]
                  }
                }
              },
              "additional_data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "value": {
                      "type": "string",
                      "maxLength": 400
                    }
                  }
                }
              },
              "expires_in": {
                "type": "integer",
                "maxLength": 10,
                "default": 86400
              },
              "created_at": {
                "type": "string",
                "example": "2021-01-31T15:33:17.000Z"
              },
              "scanned_at": {
                "type": "string",
                "example": "2021-02-05T10:25:47.000Z"
              },
              "psp_recipient_url": {
                "type": "string",
                "maxLength": 124
              },
              "reusable": {
                "type": "boolean"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DONE",
                  "REMOVED_BY_RECIPIENT",
                  "REMOVED_BY_PSP"
                ]
              }
            }
          }
        }
      },
      "decodedDynamicQRCodeWithDueDate": {
        "type": "object",
        "title": "Dynamic QR Code with due date",
        "description": "Dynamic QR Code with due date",
        "required": [
          "end_to_end_id",
          "qr_code"
        ],
        "properties": {
          "end_to_end_id": {
            "type": "string",
            "maxLength": 32
          },
          "qr_code": {
            "type": "object",
            "description": "Decoded QR code properties",
            "required": [
              "kind",
              "key",
              "key_kind",
              "review",
              "recipient",
              "final_value",
              "due_date",
              "days_after_due_date",
              "created_at",
              "scanned_at",
              "status"
            ],
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "STATIC",
                  "DYNAMIC",
                  "DYNAMIC_WITH_DUE_DATE"
                ]
              },
              "key": {
                "type": "string",
                "description": "Pix key",
                "minLength": 5,
                "maxLength": 77,
                "example": "30937116068"
              },
              "key_kind": {
                "type": "string",
                "description": "Kind from key",
                "enum": [
                  "CPF",
                  "CNPJ",
                  "EMAIL",
                  "CELLPHONE",
                  "VIRTUAL"
                ]
              },
              "category_code": {
                "type": "string",
                "description": "Recipient category code",
                "maxLength": 4,
                "default": "0000",
                "example": "0000"
              },
              "review": {
                "type": "integer",
                "maxLength": 5
              },
              "original_value": {
                "type": "number",
                "format": "double",
                "description": "Transaction value",
                "example": 500
              },
              "text_to_payer": {
                "type": "string",
                "maxLength": 140
              },
              "recipient": {
                "type": "object",
                "properties": {
                  "ispb": {
                    "type": "integer",
                    "maxLength": 8
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "document_number": {
                    "type": "number",
                    "maxLength": 14
                  },
                  "nickname": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "address": {
                    "type": "string",
                    "maxLength": 150
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 15,
                    "example": "RIO DE JANEIRO"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 2
                  },
                  "zip_code": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "example": "90485-075"
                  },
                  "conciliation_id": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "agency_number": {
                    "type": "number",
                    "maxLength": 4
                  },
                  "account_number": {
                    "type": "number",
                    "maxLength": 20
                  },
                  "account_digit": {
                    "type": "number",
                    "maxLength": 5
                  },
                  "account_type": {
                    "type": "string",
                    "enum": [
                      "CHECKING_ACCOUNT",
                      "SALARY_ACCOUNT",
                      "SAVINGS_ACCOUNT",
                      "PAYMENT_ACCOUNT"
                    ]
                  }
                }
              },
              "payer": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "document_number": {
                    "type": "number",
                    "maxLength": 14
                  }
                }
              },
              "deduction": {
                "type": "number",
                "format": "double",
                "example": 5
              },
              "discount": {
                "type": "number",
                "format": "double",
                "example": 50
              },
              "interest": {
                "type": "number",
                "format": "double",
                "example": 0.5
              },
              "fine": {
                "type": "number",
                "format": "double",
                "example": 10
              },
              "final_value": {
                "type": "number",
                "format": "double",
                "description": "Value after deduction, discount, interest and fine",
                "example": 350.59
              },
              "due_date": {
                "type": "string",
                "example": "2021-01-31"
              },
              "days_after_due_date": {
                "type": "integer",
                "maxLength": 6,
                "example": 5
              },
              "additional_data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "value": {
                      "type": "string",
                      "maxLength": 400
                    }
                  }
                }
              },
              "created_at": {
                "type": "string",
                "example": "2021-01-31T15:33:17.000Z"
              },
              "scanned_at": {
                "type": "string",
                "example": "2021-02-05T10:25:47.000Z"
              },
              "psp_recipient_url": {
                "type": "string",
                "maxLength": 124
              },
              "reusable": {
                "type": "boolean"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DONE",
                  "REMOVED_BY_RECIPIENT",
                  "REMOVED_BY_PSP"
                ]
              }
            }
          }
        }
      },
      "decodedStaticQRCode": {
        "type": "object",
        "title": "Static QR Code",
        "description": "Static QR Code",
        "required": [
          "end_to_end_id",
          "qr_code"
        ],
        "properties": {
          "end_to_end_id": {
            "type": "string",
            "maxLength": 32
          },
          "qr_code": {
            "type": "object",
            "description": "Decoded QR code properties",
            "required": [
              "kind",
              "key",
              "key_kind",
              "city",
              "recipient"
            ],
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "STATIC",
                  "DYNAMIC",
                  "DYNAMIC_WITH_DUE_DATE"
                ]
              },
              "key": {
                "type": "string",
                "description": "Pix key",
                "minLength": 5,
                "maxLength": 77,
                "example": "30937116068"
              },
              "key_kind": {
                "type": "string",
                "description": "Kind from key",
                "enum": [
                  "CPF",
                  "CNPJ",
                  "EMAIL",
                  "CELLPHONE",
                  "VIRTUAL"
                ]
              },
              "category_code": {
                "type": "string",
                "description": "Recipient category code",
                "maxLength": 4,
                "default": "0000",
                "example": "0000"
              },
              "city": {
                "type": "string",
                "maxLength": 15,
                "example": "RIO DE JANEIRO"
              },
              "zip_code": {
                "type": "string",
                "minLength": 5,
                "maxLength": 10,
                "example": "90485-075"
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "Transaction value",
                "example": 4587.92
              },
              "withdraw_ispb": {
                "type": "integer",
                "maxLength": 8,
                "description": "ISPB from PSS. When provided it means the QR code is for \"Pix Saque\".",
                "example": 44568458
              },
              "additional_data": {
                "type": "string"
              },
              "recipient": {
                "type": "object",
                "required": [
                  "ispb",
                  "document_type",
                  "account_type",
                  "account_number"
                ],
                "properties": {
                  "ispb": {
                    "type": "integer",
                    "maxLength": 8
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "document_type": {
                    "type": "string",
                    "enum": [
                      "CPF",
                      "CNPJ"
                    ]
                  },
                  "document_number": {
                    "type": "number",
                    "maxLength": 14
                  },
                  "conciliation_id": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "agency_number": {
                    "type": "number",
                    "maxLength": 4
                  },
                  "account_number": {
                    "type": "number",
                    "maxLength": 20
                  },
                  "account_digit": {
                    "type": "number",
                    "maxLength": 5
                  },
                  "account_type": {
                    "type": "string",
                    "enum": [
                      "CHECKING_ACCOUNT",
                      "SALARY_ACCOUNT",
                      "SAVINGS_ACCOUNT",
                      "PAYMENT_ACCOUNT"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "ValidationFailedError": {
        "title": "The provided data is invalid",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "VALIDATION_FAILED",
                "enum": [
                  "VALIDATION_FAILED"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Invalid request data"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "InvalidDataError": {
        "title": "Invalid Data Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "INVALID_DATA",
                "enum": [
                  "INVALID_DATA"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "The data provided has an invalid format"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "EMVMerchantAccountSizeExceededError": {
        "title": "EMV Merchant Account Size Exceeded",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED",
            "enum": [
              "EMV_MERCHANT_ACCOUNT_SIZE_EXCEEDED"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "EMV Merchant Account Information field exceeded the maximum size."
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "400"
          }
        }
      },
      "InvalidIdempotenceKeyError": {
        "title": "Invalid Idempotence Key Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "INVALID_IDEMPOTENCE_KEY",
                "enum": [
                  "INVALID_IDEMPOTENCE_KEY"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Idempotence Key is missing or is not a valid uuid."
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "InvalidUUIDError": {
        "title": "Invalid uuid",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "INVALID_UUID",
                "enum": [
                  "INVALID_UUID"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Invalid uuid"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "DecodingError": {
        "title": "Decoding Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "DECODING_ERROR",
                "enum": [
                  "DECODING_ERROR"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Error decoding QR code"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "400"
              }
            }
          }
        }
      },
      "KeyNotFoundError": {
        "title": "Key Not Found",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "KEY_NOT_FOUND",
            "enum": [
              "KEY_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "The key provided wasn't found or doesn't exist"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "404"
          }
        }
      },
      "AccountNotFoundError": {
        "title": "Account Not Found",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "ACCOUNT_NOT_FOUND",
            "enum": [
              "ACCOUNT_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Account not found"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "404"
          }
        }
      },
      "InvalidQRCodePayloadError": {
        "title": "Invalid QR Code payload",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "INVALID_QR_CODE_PAYLOAD",
            "enum": [
              "INVALID_QR_CODE_PAYLOAD"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "The payload has been violated or is invalid"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "406"
          }
        }
      },
      "DecodeTimeout": {
        "title": "Timeout to decode the qr code by third party integration",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "DECODE_TIMEOUT",
                "enum": [
                  "DECODE_TIMEOUT"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Invalid request data"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "408"
              }
            }
          }
        }
      },
      "IdempotenceKeyAlreadyExistsError": {
        "title": "Idempotence Key Already Exists Error",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "IDEMPOTENCE_KEY_ALREADY_EXISTS",
            "enum": [
              "IDEMPOTENCE_KEY_ALREADY_EXISTS"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "The idempotence key provided already exists"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "409"
          }
        }
      },
      "QrCodeGoneError": {
        "title": "Qr Code Gone Error",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "QR_CODE_GONE",
            "enum": [
              "QR_CODE_GONE"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "The QR Code is no longer available"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "410"
          }
        }
      },
      "InternalServerError": {
        "title": "Internal Server Error",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "INTERNAL_SERVER_ERROR",
            "enum": [
              "INTERNAL_SERVER_ERROR"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Unexpected error with our service"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "500"
          }
        }
      },
      "NotFound": {
        "title": "Not Found",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "NOT_FOUND",
                "enum": [
                  "NOT_FOUND"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Unable to found the requested account"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "404"
              }
            }
          }
        }
      },
      "CreateStaticQRCodeSchema": {
        "type": "object",
        "description": "Params to create a new static QR Code",
        "required": [
          "account_id",
          "format",
          "key",
          "city"
        ],
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "format": {
            "type": "string",
            "enum": [
              "IMAGE",
              "PAYLOAD_BASE_64",
              "IMAGE_AND_PAYLOAD_BASE_64"
            ],
            "description": "Sets request return format:\n* IMAGE: Static QR Code image\n* PAYLOAD_BASE_64: Static QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Static QR Code image and payload\n",
            "example": "IMAGE_AND_PAYLOAD_BASE_64"
          },
          "key": {
            "type": "string",
            "description": "Pix key",
            "minLength": 5,
            "maxLength": 77,
            "example": "30937116068"
          },
          "category_code": {
            "type": "string",
            "description": "Recipient category code",
            "maxLength": 4,
            "default": "0000",
            "example": "0000"
          },
          "value": {
            "type": "number",
            "format": "double",
            "description": "Transaction value",
            "example": 4587.92
          },
          "city": {
            "type": "string",
            "maxLength": 15,
            "example": "RIO DE JANEIRO"
          },
          "zip_code": {
            "type": "string",
            "minLength": 5,
            "maxLength": 10,
            "example": "90485-075"
          },
          "recipient_conciliation_id": {
            "type": "string",
            "maxLength": 25
          },
          "additional_data": {
            "type": "string",
            "maxLength": 64
          },
          "withdraw_ispb": {
            "type": "integer",
            "description": "ISPB from PSS. When provided it means the QR code is for \"Pix Saque\".",
            "maxLength": 8,
            "example": 44568458
          }
        }
      },
      "QRCode": {
        "type": "object",
        "description": "Static QR Code",
        "properties": {
          "image_qr_code_base_64": {
            "type": "string",
            "format": "base64",
            "description": "Static QR Code image"
          },
          "payload_base_64": {
            "type": "string",
            "format": "base64",
            "description": "Static QR Code payload"
          }
        }
      },
      "AuthenticationError": {
        "title": "Authentication error",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "AUTHENTICATION_FAILED",
            "enum": [
              "AUTHENTICATION_FAILED"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Authentication failed."
          }
        }
      },
      "ProductDisabledError": {
        "title": "Bad Request",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "PRODUCT_DISABLED",
            "enum": [
              "PRODUCT_DISABLED"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Product is not enabled."
          }
        }
      },
      "ApplicationNotFound": {
        "title": "Application product not found",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "APPLICATION_PRODUCT_NOT_FOUND",
            "enum": [
              "APPLICATION_PRODUCT_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Product not found for given application id."
          }
        }
      },
      "ProfileNotFound": {
        "title": "Bad Request",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "PROFILE_NOT_FOUND",
            "enum": [
              "PROFILE_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Profile not found."
          }
        }
      },
      "CreateDynamicImmediateQRCodeSchema": {
        "type": "object",
        "description": "Params to create a new dynamic immediate QR Code",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the QR Code.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "account_id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "format": {
            "type": "string",
            "enum": [
              "IMAGE",
              "PAYLOAD_BASE_64",
              "IMAGE_AND_PAYLOAD_BASE_64"
            ],
            "description": "Sets request return format:\n* IMAGE: Dynamic Immediate QR Code image\n* PAYLOAD_BASE_64: Dynamic Immediate QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic Immediate QR Code image and payload\n",
            "example": "IMAGE_AND_PAYLOAD_BASE_64"
          },
          "key": {
            "type": "string",
            "description": "Pix key",
            "minLength": 5,
            "maxLength": 77,
            "example": "30937116068"
          },
          "category_code": {
            "type": "string",
            "description": "Recipient category code",
            "maxLength": 4,
            "default": "0000",
            "example": "0000"
          },
          "ispb_certificate": {
            "type": "number",
            "description": "The ISPB certificate number"
          },
          "original_value": {
            "type": "number",
            "format": "double",
            "description": "The original value of the QR Code, if modality is informad the field needs to be equal to 0.00"
          },
          "text_to_payer": {
            "type": "string",
            "maxLength": 140,
            "description": "The description from recipient to payer"
          },
          "recipient": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 25,
                "description": "The name of the recipient"
              },
              "recipient_conciliation_id": {
                "type": "string",
                "minLength": 26,
                "maxLength": 36,
                "description": "The recipient conciliation ID"
              }
            },
            "required": [
              "name"
            ]
          },
          "payer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 200,
                "description": "The name of the payer"
              },
              "document_type": {
                "type": "string",
                "enum": [
                  "CPF",
                  "CNPJ"
                ],
                "description": "The document type of the payer"
              },
              "document_number": {
                "type": "string",
                "description": "The document number of the payer"
              }
            },
            "required": [
              "document_number"
            ]
          },
          "city": {
            "type": "string",
            "maxLength": 15,
            "description": "The city of the QR Code"
          },
          "zip_code": {
            "type": "string",
            "minLength": 5,
            "maxLength": 10,
            "description": "The zip code of the QR Code"
          },
          "additional_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 100,
                  "description": "The name of the additional data"
                },
                "value": {
                  "type": "string",
                  "maxLength": 400,
                  "description": "The value of the additional data"
                }
              }
            }
          },
          "allow_value_alteration": {
            "type": "boolean",
            "default": false,
            "description": "Whether value alteration is allowed, if modality is informad the field needs to be equal to false"
          },
          "expiration_seconds": {
            "type": "number",
            "description": "The expiration time of the QR Code in seconds"
          },
          "modality": {
            "type": "object",
            "properties": {
              "goal": {
                "type": "string",
                "enum": [
                  "WITHDRAW",
                  "CHANGE"
                ],
                "description": "The goal of the QR Code modality"
              },
              "value": {
                "type": "number",
                "description": "The value of the QR Code modality"
              },
              "allow_value_alteration": {
                "type": "boolean",
                "default": false,
                "description": "Whether value alteration is allowed in the modality"
              },
              "ispb": {
                "type": "number",
                "description": "The ISPB number"
              },
              "agent": {
                "type": "string",
                "enum": [
                  "WITHDRAW_SERVICE_AGENT",
                  "COMMERCIAL_ESTABLISHMENT_AGENT",
                  "AGENT_OR_OTHER_LEGAL_ENTITY"
                ],
                "description": "The agent of the QR Code modality"
              }
            },
            "required": [
              "goal",
              "value",
              "ispb",
              "agent"
            ]
          },
          "reusable": {
            "type": "boolean",
            "default": false,
            "description": "Whether the QR Code is reusable"
          }
        },
        "required": [
          "id",
          "account_id",
          "format",
          "key",
          "recipient",
          "city"
        ]
      },
      "DynamicQRCode": {
        "type": "object",
        "description": "Dynamic QR Code",
        "properties": {
          "external_id": {
            "type": "string",
            "format": "uuid-v4",
            "description": "Unique identifier from charge"
          },
          "image_qr_code_base_64": {
            "type": "string",
            "format": "base64",
            "description": "Dynamic QR Code image"
          },
          "payload_base_64": {
            "type": "string",
            "format": "base64",
            "description": "Dynamic QR Code payload"
          },
          "payload_jws": {
            "type": "string",
            "description": "Signed JWS payload"
          }
        }
      },
      "TimeoutExceeded": {
        "title": "Timeout exceeded",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "title": "Error code",
                "description": "The type of error",
                "example": "TIMEOUT_EXCEEDED",
                "enum": [
                  "TIMEOUT_EXCEEDED"
                ]
              },
              "message": {
                "type": "string",
                "title": "Error message",
                "description": "Describes a message informing a reason for the error",
                "example": "Timeout exceeded"
              },
              "status_code": {
                "type": "number",
                "description": "Error status code",
                "example": "408"
              }
            }
          }
        }
      },
      "QrCodeAlreadyExistsError": {
        "title": "Qr Code Already Exists Error",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "QR_CODE_ALREADY_EXISTS",
            "enum": [
              "QR_CODE_ALREADY_EXISTS"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Qr code already exists"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "409"
          }
        }
      },
      "CreateDynamicWithDueDateQRCodeSchema": {
        "type": "object",
        "description": "Params to create a new dynamic with due date QR Code",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the QR Code.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "account_id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "format": {
            "type": "string",
            "enum": [
              "IMAGE",
              "PAYLOAD_BASE_64",
              "IMAGE_AND_PAYLOAD_BASE_64"
            ],
            "description": "Sets request return format:\n* IMAGE: Dynamic With Due Date QR Code image\n* PAYLOAD_BASE_64: Dynamic With Due Date QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic With Due Date QR Code image and payload\n",
            "example": "IMAGE_AND_PAYLOAD_BASE_64"
          },
          "key": {
            "type": "string",
            "description": "Pix key",
            "minLength": 5,
            "maxLength": 77,
            "example": "30937116068"
          },
          "category_code": {
            "type": "string",
            "description": "Recipient category code",
            "maxLength": 4,
            "default": "0000",
            "example": "0000"
          },
          "original_value": {
            "type": "number",
            "format": "double",
            "description": "The original value of the QR Code"
          },
          "text_to_payer": {
            "type": "string",
            "maxLength": 140,
            "description": "The text from recipient to payer"
          },
          "recipient": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 25,
                "description": "The name of the recipient"
              },
              "recipient_conciliation_id": {
                "type": "string",
                "description": "The recipient conciliation ID"
              },
              "document_type": {
                "type": "string",
                "enum": [
                  "CPF",
                  "CNPJ"
                ],
                "description": "The document type of the recipient"
              },
              "document_number": {
                "type": "string",
                "description": "The document number of the recipient"
              },
              "street_name": {
                "type": "string",
                "maxLength": 150,
                "description": "The street name of the recipient"
              }
            },
            "required": [
              "name",
              "recipient_conciliation_id",
              "document_number",
              "document_type"
            ]
          },
          "payer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 200,
                "description": "The name of the payer"
              },
              "document_type": {
                "type": "string",
                "enum": [
                  "CPF",
                  "CNPJ"
                ],
                "description": "The document type of the payer"
              },
              "document_number": {
                "type": "string",
                "description": "The document number of the payer"
              }
            },
            "required": [
              "name",
              "document_number"
            ]
          },
          "uf": {
            "type": "string",
            "maxLength": 2,
            "description": "The uf of the QR Code"
          },
          "city": {
            "type": "string",
            "maxLength": 15,
            "description": "The city of the QR Code"
          },
          "zip_code": {
            "type": "string",
            "minLength": 5,
            "maxLength": 10,
            "description": "The zip code of the QR Code"
          },
          "deduction": {
            "type": "number",
            "example": 12.23,
            "description": "Deduction value applied in the Qr Code"
          },
          "discount": {
            "type": "number",
            "example": 12.23,
            "description": "Discount value applied in the Qr Code"
          },
          "interest": {
            "type": "number",
            "example": 12.23,
            "description": "Interest value applied in the Qr Code"
          },
          "fine": {
            "type": "number",
            "example": 12.23,
            "description": "Fine value applied in the Qr Code"
          },
          "final_value": {
            "type": "number",
            "example": 12.23,
            "description": "QR Code's final value"
          },
          "due_date": {
            "type": "string",
            "example": "2024-06-02",
            "description": "QR Code's due date"
          },
          "days_after_due_date": {
            "type": "number",
            "example": 12,
            "description": "QR Code's days after the due date that qr code is enabled to be payed"
          },
          "additional_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 100,
                  "description": "The name of the additional data"
                },
                "value": {
                  "type": "string",
                  "maxLength": 400,
                  "description": "The value of the additional data"
                }
              }
            }
          },
          "reusable": {
            "type": "boolean",
            "default": false,
            "description": "Whether the QR Code is reusable"
          }
        },
        "required": [
          "id",
          "account_id",
          "format",
          "key",
          "uf",
          "recipient",
          "payer",
          "city",
          "zip_code",
          "final_value",
          "days_after_due_date",
          "due_date"
        ]
      },
      "QrCodeWithDueDateDisabled": {
        "title": "Qr code with  with due date is not available",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "QR_CODE_WITH_DUE_DATE_DISABLED"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "Qr code with due date is not available"
          }
        }
      },
      "UpdateDynamicImmediateQRCodeSchema": {
        "type": "object",
        "description": "Params to update an dynamic immediate QR Code",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Unique account identifier. Mandatory when providing the key.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "format": {
            "type": "string",
            "enum": [
              "IMAGE",
              "PAYLOAD_BASE_64",
              "IMAGE_AND_PAYLOAD_BASE_64"
            ],
            "description": "Sets request return format:\n* IMAGE: Dynamic Immediate QR Code image\n* PAYLOAD_BASE_64: Dynamic Immediate QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic Immediate QR Code image and payload\n",
            "example": "IMAGE_AND_PAYLOAD_BASE_64"
          },
          "key": {
            "type": "string",
            "description": "Pix key",
            "minLength": 5,
            "maxLength": 77,
            "example": "30937116068"
          },
          "category_code": {
            "type": "string",
            "description": "Recipient category code",
            "maxLength": 4,
            "default": "0000",
            "example": "0000"
          },
          "ispb_certificate": {
            "type": "number",
            "description": "The ISPB certificate number"
          },
          "original_value": {
            "type": "number",
            "format": "double",
            "description": "The original value of the QR Code"
          },
          "text_to_payer": {
            "type": "string",
            "maxLength": 140,
            "description": "The text from recipient to payer"
          },
          "recipient": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 25,
                "description": "The name of the recipient"
              },
              "recipient_conciliation_id": {
                "type": "string",
                "description": "The recipient conciliation ID"
              }
            }
          },
          "payer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 200,
                "description": "The name of the payer"
              },
              "document_type": {
                "type": "string",
                "enum": [
                  "CPF",
                  "CNPJ"
                ],
                "description": "The document type of the payer"
              },
              "document_number": {
                "type": "number",
                "description": "The document number of the payer"
              }
            }
          },
          "city": {
            "type": "string",
            "maxLength": 15,
            "description": "The city of the QR Code"
          },
          "zip_code": {
            "type": "string",
            "minLength": 5,
            "maxLength": 10,
            "description": "The zip code of the QR Code"
          },
          "additional_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 100,
                  "description": "The name of the additional data"
                },
                "value": {
                  "type": "string",
                  "maxLength": 400,
                  "description": "The value of the additional data"
                }
              }
            }
          },
          "allow_value_alteration": {
            "type": "boolean",
            "default": false,
            "description": "Whether value alteration is allowed"
          },
          "expiration_seconds": {
            "type": "number",
            "description": "The expiration time of the QR Code in seconds"
          },
          "modality": {
            "type": "object",
            "properties": {
              "goal": {
                "type": "string",
                "enum": [
                  "WITHDRAW",
                  "CHANGE"
                ],
                "description": "The goal of the QR Code modality"
              },
              "value": {
                "type": "number",
                "description": "The value of the QR Code modality"
              },
              "allow_value_alteration": {
                "type": "boolean",
                "default": false,
                "description": "Whether value alteration is allowed in the modality"
              },
              "ispb": {
                "type": "number",
                "description": "The ISPB number"
              },
              "agent": {
                "type": "string",
                "enum": [
                  "WITHDRAW_SERVICE_AGENT",
                  "COMMERCIAL_ESTABLISHMENT_AGENT",
                  "AGENT_OR_OTHER_LEGAL_ENTITY"
                ],
                "description": "The agent of the QR Code modality"
              }
            }
          },
          "reusable": {
            "type": "boolean",
            "default": false,
            "description": "Whether the QR Code is reusable"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DONE",
              "REMOVED_BY_RECIPIENT",
              "REMOVED_BY_PSP"
            ],
            "description": "Billing status"
          }
        },
        "required": [
          "format",
          "status"
        ]
      },
      "UpdateDynamicImmediateQRCode": {
        "type": "object",
        "description": "Dynamic Immediate QR Code",
        "properties": {
          "external_id": {
            "type": "string",
            "format": "uuid-v4",
            "description": "Unique identifier from charge"
          },
          "revision": {
            "type": "number",
            "description": "Billing review identifier"
          },
          "image_qr_code_base_64": {
            "type": "string",
            "format": "base64",
            "description": "Dynamic Immediate QR Code image"
          },
          "payload_base_64": {
            "type": "string",
            "format": "base64",
            "description": "Dynamic Immediate QR Code payload"
          },
          "payload_jws": {
            "type": "string",
            "description": "Signed JWS payload"
          }
        }
      },
      "AccountDisabledError": {
        "title": "The provided account has been disabled.",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "ACCOUNT_DISABLED",
            "enum": [
              "ACCOUNT_DISABLED"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "The provided account has been disabled."
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "400"
          }
        }
      },
      "QRCodeNotFoundError": {
        "title": "QR Code Not Found",
        "properties": {
          "code": {
            "type": "string",
            "title": "Error code",
            "description": "The type of error",
            "example": "QR_CODE_NOT_FOUND",
            "enum": [
              "QR_CODE_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Describes a message informing a reason for the error",
            "example": "QR code not found"
          },
          "status_code": {
            "type": "number",
            "description": "Error status code",
            "example": "404"
          }
        }
      },
      "UpdateDynamicWithDueDateQRCodeSchema": {
        "type": "object",
        "description": "Params to update an dynamic immediate QR Code",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Unique account identifier. Mandatory when providing the key.",
            "format": "uuid-v4",
            "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
          },
          "format": {
            "type": "string",
            "enum": [
              "IMAGE",
              "PAYLOAD_BASE_64",
              "IMAGE_AND_PAYLOAD_BASE_64"
            ],
            "description": "Sets request return format:\n* IMAGE: Dynamic Immediate QR Code image\n* PAYLOAD_BASE_64: Dynamic Immediate QR Code payload\n* IMAGE_AND_PAYLOAD_BASE_64: Dynamic Immediate QR Code image and payload\n",
            "example": "IMAGE_AND_PAYLOAD_BASE_64"
          },
          "key": {
            "type": "string",
            "description": "Pix key",
            "minLength": 5,
            "maxLength": 77,
            "example": "30937116068"
          },
          "category_code": {
            "type": "string",
            "description": "Recipient category code",
            "maxLength": 4,
            "default": "0000",
            "example": "0000"
          },
          "ispb_certificate": {
            "type": "number",
            "description": "The ISPB certificate number"
          },
          "original_value": {
            "type": "number",
            "format": "double",
            "description": "The original value of the QR Code"
          },
          "text_to_payer": {
            "type": "string",
            "maxLength": 140,
            "description": "The text from recipient to payer"
          },
          "recipient": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 25,
                "description": "The name of the recipient"
              },
              "nickname": {
                "type": "string",
                "maxLength": 100,
                "description": "The nickname of the recipient"
              },
              "recipient_conciliation_id": {
                "type": "string",
                "description": "The recipient conciliation ID"
              },
              "document_type": {
                "type": "string",
                "enum": [
                  "CPF",
                  "CNPJ"
                ],
                "description": "The document type of the recipient"
              },
              "document_number": {
                "type": "string",
                "description": "The document number of the recipient"
              },
              "street_name": {
                "type": "string",
                "maxLength": 150,
                "description": "The street name of the recipient"
              }
            }
          },
          "payer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 200,
                "description": "The name of the payer"
              },
              "document_type": {
                "type": "string",
                "enum": [
                  "CPF",
                  "CNPJ"
                ],
                "description": "The document type of the payer"
              },
              "document_number": {
                "type": "number",
                "description": "The document number of the payer"
              }
            }
          },
          "city": {
            "type": "string",
            "maxLength": 15,
            "description": "The city of the QR Code"
          },
          "zip_code": {
            "type": "string",
            "minLength": 5,
            "maxLength": 10,
            "description": "The zip code of the QR Code"
          },
          "deduction": {
            "type": "number",
            "example": 12.23,
            "description": "Deduction value applied in the Qr Code"
          },
          "discount": {
            "type": "number",
            "example": 12.23,
            "description": "Discount value applied in the Qr Code"
          },
          "interest": {
            "type": "number",
            "example": 12.23,
            "description": "Interest value applied in the Qr Code"
          },
          "fine": {
            "type": "number",
            "example": 12.23,
            "description": "Fine value applied in the Qr Code"
          },
          "final_value": {
            "type": "number",
            "example": 12.23,
            "description": "QR Code's final value"
          },
          "due_date": {
            "type": "string",
            "example": "2024-06-02",
            "description": "QR Code's due date"
          },
          "days_after_due_date": {
            "type": "number",
            "example": 12,
            "description": "QR Code's days after the due date that qr code is enabled to be payed"
          },
          "additional_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 100,
                  "description": "The name of the additional data"
                },
                "value": {
                  "type": "string",
                  "maxLength": 400,
                  "description": "The value of the additional data"
                }
              }
            }
          },
          "reusable": {
            "type": "boolean",
            "default": false,
            "description": "Whether the QR Code is reusable"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DONE",
              "REMOVED_BY_RECIPIENT",
              "REMOVED_BY_PSP"
            ],
            "description": "Billing status"
          }
        },
        "required": [
          "format",
          "status"
        ]
      },
      "BacenInvalidDataError": {
        "title": "Invalid Data Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of error",
                "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadOperacaoInvalida"
              },
              "title": {
                "type": "string",
                "description": "Describes a title informing a reason for the error",
                "example": "Requisicao invalida."
              },
              "detail": {
                "type": "string",
                "description": "Describes a message informing a reason for the error",
                "example": "A cobranca existe, mas a requisicao e invalida."
              },
              "status": {
                "type": "number",
                "description": "Error status code",
                "example": 400
              },
              "violacoes": {
                "type": "array",
                "description": "Array of violations",
                "items": {
                  "type": "object",
                  "properties": {
                    "propriedade": {
                      "type": "string",
                      "description": "Field property from error",
                      "example": "id"
                    },
                    "razao": {
                      "type": "string",
                      "description": "Reason of the error",
                      "example": "Formato id invalido"
                    },
                    "valor": {
                      "type": "string",
                      "description": "Value of the property",
                      "example": "cd1e31ab234234234"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BacenNotFoundError": {
        "title": "Not Found Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of error",
                "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado"
              },
              "title": {
                "type": "string",
                "description": "Describes a title informing a reason for the error",
                "example": "Cobranca nao encontrada."
              },
              "detail": {
                "type": "string",
                "description": "Describes a message informing a reason for the error",
                "example": "A cobranca em questao nao foi encontrada para a location requisitada."
              },
              "status": {
                "type": "number",
                "description": "Error status code",
                "example": 404
              }
            }
          }
        }
      },
      "BacenGoneError": {
        "title": "Gone Error",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of error",
                "example": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado"
              },
              "title": {
                "type": "string",
                "description": "Describes a title informing a reason for the error",
                "example": "Cobranca nao encontrada."
              },
              "detail": {
                "type": "string",
                "description": "Describes a message informing a reason for the error",
                "example": "A cobranca em questao nao foi encontrada para a location requisitada."
              },
              "status": {
                "type": "number",
                "description": "Error status code",
                "example": 410
              }
            }
          }
        }
      },
      "GetJWKS": {
        "type": "object",
        "properties": {
          "kty": {
            "type": "string",
            "example": "RSA",
            "description": "Key Type"
          },
          "n": {
            "type": "string",
            "example": "ucrGOh24iWZIp4U4KFtS_VuU6XOJIOS6iQS0ucxsvsG6JHlAIxFyc0FcfVF_W14ObjFv9d4dyWx3gVnO4Asy82SCU2nCVfkTqYK9apGsTuSGv2gQyiPhNnYpO1Rglsk4Py1Xzebjex23eKgqDJ5gnklrpWkKctN9BHiif5EbAAKBuhkN9xqkAClqkdmGpAiR2e0ZxSJg0XLPnHKMlsJtN1gjyYAs918tM15YvMy_7X-cemraQSVrm53GuQSIMIZqV_ZmrEzOnczdWIiV352j-xrMClh719dKGaE-Zb3b87c80co-2HgIoi1t8D2qTU5DLfodsLh7rbrgKRlBGopECQ",
            "description": "Private Key Representation and Blinding"
          },
          "e": {
            "type": "string",
            "example": "AQAB",
            "description": "Private Key Representation and Blinding"
          },
          "kid": {
            "type": "string",
            "example": "0F9E7F2CF9CC25B92F96FC2CF810B02D2C3B5617C81A8661157E3DDB48FCCE2E",
            "description": "Key ID"
          },
          "x5t": {
            "type": "string",
            "example": "PMqWrSw74iE6IQhDtRFTG+A5WYc=",
            "description": "X.509 Certificate SHA-1 Thumbprint"
          },
          "x5t#S256": {
            "type": "string",
            "example": "D55/LPnMJbkvlvws+BCwLSw7VhfIGoZhFX4920j8zi4=",
            "description": "X.509 Certificate SHA-256 Thumbprint"
          },
          "x5c": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "X.509 Certificate Chain",
              "example": "MIIHYTCCBkmgAwIBAgIQVyX+yMTZvNFjKIn15rmMiDANBgkqhkiG9w0BAQsFADCBkTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMTkwNwYDVQQDEzBTZWN0aWdvIFJTQSBFeHRlbmRlZCBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIgQ0EwHhcNMjQwNTE1MDAwMDAwWhcNMjUwNTE1MjM1OTU5WjCByjEbMBkGA1UEBRMSMTEuNDc2LjY3My8wMDAxLTM5MRMwEQYLKwYBBAGCNzwCAQMTAkJSMR0wGwYDVQQPExRQcml2YXRlIE9yZ2FuaXphdGlvbjELMAkGA1UEBhMCQlIxGjAYBgNVBAgTEVJpbyBHcmFuZGUgZG8gU3VsMScwJQYDVQQKEx5CQU5DTyBSQU5ET04gKEJBTkNPIFJBTkRPTiBTQSkxJTAjBgNVBAMTHHBpeC1xcmNvZGUtaC5iYW5jb3JhbmRvbi5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC5ysY6HbiJZkinhTgoW1L9W5Tpc4kg5LqJBLS5zGy+wbokeUAjEXJzQVx9UX9bXg5uMW/13h3JbHeBWc7gCzLzZIJTacJV+ROpgr1qkaxO5Ia/aBDKI+E2dik7VGCWyTg/LVfN5uN7Hbd4qCoMnmCeSWulaQpy030EeKJ/kRsAAoG6GQ33GqQAKWqR2YakCJHZ7RnFImDRcs+ccoyWwm03WCPJgCz3Xy0zXli8zL/tf5x6atpBJWubnca5BIgwhmpX9masTM6dzN1YiJXfnaP7GswKWHvX10oZoT5lvdvztzzRyj7YeAiiLW3wPapNTkMt+h2wuHutuuApGUEaikQJAgMBAAGjggN4MIIDdDAfBgNVHSMEGDAWgBQsaf+AyYeQrjThtOdMk4WZQOmnsjAdBgNVHQ4EFgQUwhFPO2O5udFRl1YTj1MhCk5e2QIwDgYDVR0PAQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMEkGA1UdIARCMEAwNQYMKwYBBAGyMQECAQUBMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAcGBWeBDAEBMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwuc2VjdGlnby5jb20vU2VjdGlnb1JTQUV4dGVuZGVkVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNybDCBhgYIKwYBBQUHAQEEejB4MFEGCCsGAQUFBzAChkVodHRwOi8vY3J0LnNlY3RpZ28uY29tL1NlY3RpZ29SU0FFeHRlbmRlZFZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5jcnQwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLnNlY3RpZ28uY29tMEkGA1UdEQRCMECCHHBpeC1xcmNvZGUtaC5iYW5jb3JhbmRvbi5jb22CIHd3dy5waXgtcXJjb2RlLWguYmFuY29yYW5kb24uY29tMIIBfAYKKwYBBAHWeQIEAgSCAWwEggFoAWYAdgDPEVbu1S58r/OHW9lpLpvpGnFnSrAX7KwB0lt3zsw7CAAAAY9802QMAAAEAwBHMEUCIQDI4ddnbELDMsGwkXIV38Cv74bic6EQlWzFOSVkIKk6XgIgR+gCS/Kt3PCK1fim/PbAxoApAoFaIJbUWDrk22S3eicAdQCi4wrkRe+9rZt+OO1HZ3dT14JbhJTXK14bLMS5UKRH5wAAAY9802PtAAAEAwBGMEQCIHNoOga82pmmV5VDIBbs8KfMx52/hr220kfc0fxcDM9fAiB3PS5qHaEQGUyMMz9NozBuRwWRzRnkJgSQOLgkBYA8GgB1AE51oydcmhDDOFts1N8/Uusd8OCOG41pwLH6ZLFimjnfAAABj3zTY+wAAAQDAEYwRAIgf7Q2TJGWKmacLnnET0abjRh1paY/u+zPx0VWC8xMvnwCIB5Xcn5JjtaWwlJY9LLr7wRdTAtvoJg0fyGA1tvj0gJaMA0GCSqGSIb3DQEBCwUAA4IBAQB2pi4VJlJMtaP0epGsglq6hOBWS8Rp1Ba9GGNR9xQ2aUaT/5sLMG12djgWqWTLQMOJxxSV72sXhwrCy+8qKLEtaB4TEhPmuTKJtCRXmVUvl/EkSCG8CyKcbq60kmzsFa0OBjtG/RRg3FXYZpH604ZztLxlIHGtclAQAxqNmGIFGtrlDS4h/w3jVvtMGnV2keYGCHgZDp9JbZpQLz6Kdo9JRRCI+bwarI1MpLx1d1bdBoiG4pxA/m1hCBtTFL17R5N5LHLFejCsO0f/en+ZDXrotcYZSZMlSS7Uj/NapQI2PpZcU285lIWmnQBjPJ0cHgQ4wmD5HsYv+J1qR4jgQdcJ"
            }
          },
          "key_ops": {
            "type": "array",
            "description": "Key Operations",
            "items": {
              "type": "string",
              "example": "verify"
            }
          }
        }
      }
    },
    "examples": {
      "staticDecodedQRCodeResponse": {
        "value": {
          "end_to_end_id": "E1476673020220111130052626644038",
          "qr_code": {
            "kind": "STATIC",
            "category_code": "0000",
            "city": "PORTO ALEGRE",
            "key": "90226395090",
            "key_kind": "CPF",
            "recipient": {
              "account_number": 378,
              "account_digit": 6,
              "account_type": "PAYMENT_ACCOUNT",
              "agency_number": 1,
              "conciliation_id": "_**",
              "document_number": 90226395090,
              "ispb": 11476673,
              "name": "Testes Automatizados",
              "document_type": "CPF"
            },
            "value": 2.44,
            "zip_code": "90480-002"
          }
        }
      },
      "dynamicDecodedQRCodeResponse": {
        "value": {
          "end_to_end_id": "E1476673020220111130052626644038",
          "qr_code": {
            "kind": "DYNAMIC",
            "category_code": "0000",
            "city": "PORTO ALEGRE",
            "zip_code": "90480-002",
            "key": "90226395090",
            "key_kind": "CPF",
            "original_value": 2.44,
            "recipient": {
              "account_number": 378,
              "account_digit": 6,
              "account_type": "PAYMENT_ACCOUNT",
              "agency_number": 1,
              "conciliation_id": "_**",
              "document_number": 90226395090,
              "ispb": 11476673,
              "name": "Testes Automatizados",
              "document_type": "CPF"
            },
            "payer": {
              "name": "Jorge Silva",
              "document_number": 72909231038
            },
            "modality": {
              "agent": "AGENT_OR_OTHER_LEGAL_ENTITY",
              "allow_value_alteration": false,
              "withdraw_ispb": 145,
              "goal": "WITHDRAW",
              "value": 5
            },
            "psp_recipient_url": "http://placeholder.com",
            "reusable": true,
            "review": 5456,
            "created_at": "2021-01-31T15:33:17.000Z",
            "scanned_at": "2021-02-05T10:25:47.000Z",
            "status": "ACTIVE",
            "text_to_payer": "lorem ipsum",
            "expires_in": 43200
          }
        }
      },
      "dynamicWithDueDateDecodedQRCodeResponse": {
        "value": {
          "end_to_end_id": "E1476673020220111130052626644038",
          "qr_code": {
            "kind": "DYNAMIC_WITH_DUE_DATE",
            "category_code": "0000",
            "days_after_due_date": 5,
            "deduction": 0.31,
            "discount": 0.48,
            "due_date": "2021-01-31",
            "final_value": 255.57,
            "fine": 10.05,
            "interest": 1.55,
            "key": "90226395090",
            "key_kind": "CPF",
            "original_value": 254.57,
            "payer": {
              "document_number": 72909231038,
              "name": "Jorge Silva"
            },
            "recipient": {
              "account_number": 378,
              "account_digit": 6,
              "account_type": "PAYMENT_ACCOUNT",
              "address": "1o de Maio",
              "agency_number": 1131,
              "conciliation_id": "_**",
              "document_number": 27600504081,
              "document_type": "CPF",
              "ispb": 11476673,
              "name": "Testes Automatizados",
              "city": "PORTO ALEGRE",
              "state": "RS",
              "zip_code": "90480-002"
            },
            "review": 5456,
            "created_at": "2021-01-31T09:28:03.000Z",
            "scanned_at": "2021-01-31T15:33:17.000Z",
            "status": "DONE",
            "text_to_payer": "lorem ipsum",
            "psp_recipient_url": "http://placeholder.com"
          }
        }
      }
    }
  }
}